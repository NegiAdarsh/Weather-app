{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/WeatherAlert.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Import axios for API calls\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherAlerts = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.log('No token found, redirecting to login.');\n      navigate('/login'); // Redirect to the login page if not logged in\n      return; // Exit early to prevent further execution\n    }\n    try {\n      const userData = JSON.parse(atob(token.split('.')[1])); // Decode JWT token payload\n      console.log('User data from token:', userData); // Log user data for debugging\n\n      // Fetch complete user details from backend\n      const fetchUserDetails = async () => {\n        try {\n          const response = await axios.get(`/api/users/${userData.id}`, {\n            // Assuming the route to get user details\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUser(response.data); // Set the complete user object\n        } catch (error) {\n          console.error('Error fetching user details:', error);\n          navigate('/login'); // Redirect if there's an error fetching details\n        } finally {\n          setLoading(false); // Set loading to false at the end of the check\n        }\n      };\n      fetchUserDetails();\n    } catch (error) {\n      console.error('Failed to decode token:', error);\n      navigate('/login'); // Redirect if there's an error in decoding\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : user ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Welcome, \", user.username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) // Now this should display the complete user object\n    : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Redirecting to login...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherAlerts, \"bMs6vkxBNdJdvAQTZITyVwx4nss=\", false, function () {\n  return [useNavigate];\n});\n_c = WeatherAlerts;\nexport default WeatherAlerts;\nvar _c;\n$RefreshReg$(_c, \"WeatherAlerts\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","WeatherAlerts","_s","navigate","user","setUser","loading","setLoading","token","localStorage","getItem","console","log","userData","JSON","parse","atob","split","fetchUserDetails","response","get","id","headers","Authorization","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","username","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/WeatherAlert.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Import axios for API calls\n\nconst WeatherAlerts = () => {\n    const navigate = useNavigate();\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n\n        if (!token) {\n            console.log('No token found, redirecting to login.');\n            navigate('/login'); // Redirect to the login page if not logged in\n            return; // Exit early to prevent further execution\n        }\n\n        try {\n            const userData = JSON.parse(atob(token.split('.')[1])); // Decode JWT token payload\n            console.log('User data from token:', userData); // Log user data for debugging\n            \n            // Fetch complete user details from backend\n            const fetchUserDetails = async () => {\n                try {\n                    const response = await axios.get(`/api/users/${userData.id}`, { // Assuming the route to get user details\n                        headers: {\n                            Authorization: `Bearer ${token}`\n                        }\n                    });\n                    setUser(response.data); // Set the complete user object\n                } catch (error) {\n                    console.error('Error fetching user details:', error);\n                    navigate('/login'); // Redirect if there's an error fetching details\n                } finally {\n                    setLoading(false); // Set loading to false at the end of the check\n                }\n            };\n\n            fetchUserDetails();\n        } catch (error) {\n            console.error('Failed to decode token:', error);\n            navigate('/login'); // Redirect if there's an error in decoding\n        }\n    }, [navigate]);\n\n    return (\n        <div>\n            <h2>Weather Alerts</h2>\n            {loading ? (\n                <h3>Loading...</h3>\n            ) : user ? (\n                <h3>Welcome, {user.username}!</h3> // Now this should display the complete user object\n            ) : (\n                <h3>Redirecting to login...</h3>\n            )}\n        </div>\n    );\n};\n\nexport default WeatherAlerts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}