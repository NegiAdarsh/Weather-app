{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/src/components/WeeklyForecast.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklyForecast = ({\n  data\n}) => {\n  const dailyData = data.list.filter((item, index) => index % 8 === 0).slice(0, 7);\n\n  // Mapping of images based on weather description and time of day\n  const weatherImages = {\n    'clear sky day': 'url_to_clear_sky_day_image',\n    'clear sky night': 'url_to_clear_sky_night_image'\n    // Add more mappings as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-3xl p-8 mb-8 shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800\",\n      children: \"7-Day Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 sm:grid-cols-4 md:grid-cols-7 gap-4\",\n      children: dailyData.map((day, index) => {\n        const icon = day.weather[0].icon; // e.g., '01d'\n        const description = day.weather[0].description.toLowerCase(); // e.g., 'clear sky'\n\n        // Determine if it's day or night\n        const timeOfDay = icon.endsWith('d') ? 'day' : 'night';\n\n        // Create the key\n        const weatherKey = `${description} ${timeOfDay}`;\n\n        // Get the image URL from the mapping\n        const imageUrl = weatherImages[weatherKey] || `http://openweathermap.org/img/wn/${icon}@2x.png`; // Fallback to OpenWeather image\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 rounded-2xl p-4 flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold text-gray-700 mb-2\",\n            children: new Date(day.dt * 1000).toLocaleDateString([], {\n              weekday: 'short'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: weatherKey,\n            className: \"w-16 h-16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl font-bold text-gray-800 mt-2\",\n            children: [Math.round(day.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl font-bold text-gray-800 mt-2\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: day.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = WeeklyForecast;\nexport default WeeklyForecast;\nvar _c;\n$RefreshReg$(_c, \"WeeklyForecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WeeklyForecast","data","dailyData","list","filter","item","index","slice","weatherImages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","day","icon","weather","description","toLowerCase","timeOfDay","endsWith","weatherKey","imageUrl","Date","dt","toLocaleDateString","weekday","src","alt","Math","round","main","temp","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/src/components/WeeklyForecast.jsx"],"sourcesContent":["import React from 'react';\n\nconst WeeklyForecast = ({ data }) => {\n  const dailyData = data.list.filter((item, index) => index % 8 === 0).slice(0, 7);\n\n  // Mapping of images based on weather description and time of day\n  const weatherImages = {\n    'clear sky day': 'url_to_clear_sky_day_image',\n    'clear sky night': 'url_to_clear_sky_night_image',\n    // Add more mappings as needed\n  };\n\n  return (\n    <div className=\"bg-white rounded-3xl p-8 mb-8 shadow-lg\">\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800\">7-Day Forecast</h2>\n      <div className=\"grid grid-cols-2 sm:grid-cols-4 md:grid-cols-7 gap-4\">\n        {dailyData.map((day, index) => {\n          const icon = day.weather[0].icon; // e.g., '01d'\n          const description = day.weather[0].description.toLowerCase(); // e.g., 'clear sky'\n          \n          // Determine if it's day or night\n          const timeOfDay = icon.endsWith('d') ? 'day' : 'night';\n          \n          // Create the key\n          const weatherKey = `${description} ${timeOfDay}`;\n          \n          // Get the image URL from the mapping\n          const imageUrl = weatherImages[weatherKey] || `http://openweathermap.org/img/wn/${icon}@2x.png`; // Fallback to OpenWeather image\n\n          return (\n            <div key={index} className=\"bg-gray-100 rounded-2xl p-4 flex flex-col items-center\">\n              <p className=\"font-semibold text-gray-700 mb-2\">\n                {new Date(day.dt * 1000).toLocaleDateString([], { weekday: 'short' })}\n              </p>\n              <img\n                src={imageUrl}\n                alt={weatherKey}\n                className=\"w-16 h-16\"\n              />\n              <p className=\"text-xl font-bold text-gray-800 mt-2\">{Math.round(day.main.temp)}Â°C</p>\n              <br />\n              <p className=\"text-xl font-bold text-gray-800 mt-2\">{description}</p>\n              <br />\n              <p className=\"text-sm text-gray-600\">{day.weather[0].main}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklyForecast;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}