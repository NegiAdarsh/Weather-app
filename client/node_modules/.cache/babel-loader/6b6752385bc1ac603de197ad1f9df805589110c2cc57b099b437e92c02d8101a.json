{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/TemperatureGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemperatureGraph = ({\n  violations\n}) => {\n  _s();\n  const [groupedData, setGroupedData] = useState({});\n  useEffect(() => {\n    // Group violations by location (city) and alert type\n    const grouped = violations.reduce((acc, violation) => {\n      const {\n        location,\n        alertType\n      } = violation;\n\n      // Create a nested structure: { location: { alertType: [] } }\n      if (!acc[location]) {\n        acc[location] = {};\n      }\n      if (!acc[location][alertType]) {\n        acc[location][alertType] = [];\n      }\n      acc[location][alertType].push(violation);\n      return acc;\n    }, {});\n    setGroupedData(grouped);\n  }, [violations]);\n  const renderGraphs = () => {\n    return Object.keys(groupedData).map(location => {\n      const alertTypes = groupedData[location];\n      return Object.keys(alertTypes).map(alertType => {\n        const cityViolations = alertTypes[alertType];\n        const labels = cityViolations.map(violation => new Date(violation.timestamp).toLocaleString());\n        const thresholdValues = cityViolations.map(violation => violation.thresholdValue);\n        const recordedValues = cityViolations.map(violation => violation.recordedTemperature || violation.recordedWindSpeed); // handle both temp and wind alerts\n\n        const data = {\n          labels,\n          datasets: [{\n            label: 'Threshold Value',\n            data: thresholdValues,\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            fill: false,\n            tension: 0.1\n          }, {\n            label: `Recorded ${alertType === 'temp' ? 'Temperature (°C)' : 'Wind Speed (km/h)'}`,\n            data: recordedValues,\n            borderColor: 'blue',\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            fill: false,\n            tension: 0.1\n          }]\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '40px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mb-4\",\n            children: [location, \" \", alertType === 'temp' ? 'Temperature' : 'Wind', \" Violations\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, `${location}-${alertType}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(groupedData).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No temperature or wind violations to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : renderGraphs()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(TemperatureGraph, \"XGjZ0L7muXjrZG3JkJ2mGvbi6AI=\");\n_c = TemperatureGraph;\nexport default TemperatureGraph;\nvar _c;\n$RefreshReg$(_c, \"TemperatureGraph\");","map":{"version":3,"names":["React","useEffect","useState","Line","jsxDEV","_jsxDEV","TemperatureGraph","violations","_s","groupedData","setGroupedData","grouped","reduce","acc","violation","location","alertType","push","renderGraphs","Object","keys","map","alertTypes","cityViolations","labels","Date","timestamp","toLocaleString","thresholdValues","thresholdValue","recordedValues","recordedTemperature","recordedWindSpeed","data","datasets","label","borderColor","backgroundColor","fill","tension","style","marginBottom","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/TemperatureGraph.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nconst TemperatureGraph = ({ violations }) => {\n  const [groupedData, setGroupedData] = useState({});\n\n  useEffect(() => {\n    // Group violations by location (city) and alert type\n    const grouped = violations.reduce((acc, violation) => {\n      const { location, alertType } = violation;\n\n      // Create a nested structure: { location: { alertType: [] } }\n      if (!acc[location]) {\n        acc[location] = {};\n      }\n\n      if (!acc[location][alertType]) {\n        acc[location][alertType] = [];\n      }\n\n      acc[location][alertType].push(violation);\n      return acc;\n    }, {});\n\n    setGroupedData(grouped);\n  }, [violations]);\n\n  const renderGraphs = () => {\n    return Object.keys(groupedData).map((location) => {\n      const alertTypes = groupedData[location];\n\n      return Object.keys(alertTypes).map((alertType) => {\n        const cityViolations = alertTypes[alertType];\n\n        const labels = cityViolations.map(violation =>\n          new Date(violation.timestamp).toLocaleString()\n        );\n\n        const thresholdValues = cityViolations.map(violation => violation.thresholdValue);\n        const recordedValues = cityViolations.map(violation => violation.recordedTemperature || violation.recordedWindSpeed); // handle both temp and wind alerts\n\n        const data = {\n          labels,\n          datasets: [\n            {\n              label: 'Threshold Value',\n              data: thresholdValues,\n              borderColor: 'red',\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              fill: false,\n              tension: 0.1,\n            },\n            {\n              label: `Recorded ${alertType === 'temp' ? 'Temperature (°C)' : 'Wind Speed (km/h)'}`,\n              data: recordedValues,\n              borderColor: 'blue',\n              backgroundColor: 'rgba(54, 162, 235, 0.2)',\n              fill: false,\n              tension: 0.1,\n            }\n          ]\n        };\n\n        return (\n          <div key={`${location}-${alertType}`} style={{ marginBottom: '40px' }}>\n            <h3 className=\"text-xl font-bold mb-4\">\n              {location} {alertType === 'temp' ? 'Temperature' : 'Wind'} Violations\n            </h3>\n            <Line data={data} />\n          </div>\n        );\n      });\n    });\n  };\n\n  return (\n    <div>\n      {Object.keys(groupedData).length === 0 ? (\n        <div>No temperature or wind violations to display.</div>\n      ) : (\n        renderGraphs()\n      )}\n    </div>\n  );\n};\n\nexport default TemperatureGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}