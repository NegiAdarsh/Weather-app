{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/src/components/WeeklyForecast.jsx\";\nimport React from 'react';\nimport weatherIcons from './weatherIcons'; // Import the local weather images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getWeatherImage = (description, timeOfDay) => {\n  if (description.includes(\"clear sky\")) {\n    return timeOfDay === 'd' ? weatherIcons.clear_sky_day : weatherIcons.clear_sky_night;\n  } else if (description.includes(\"cloudy\")) {\n    return timeOfDay === 'd' ? weatherIcons.cloudy_day : weatherIcons.cloudy_night;\n  } else if (description.includes(\"rain\")) {\n    return weatherIcons.rain;\n  } else if (description.includes(\"frost\")) {\n    return weatherIcons.frost;\n  }\n  return null; // No match found\n};\nconst WeeklyForecast = ({\n  currentWeather,\n  forecastData\n}) => {\n  const {\n    weather,\n    main,\n    dt\n  } = currentWeather;\n  const description = weather[0].description.toLowerCase();\n  const icon = weather[0].icon;\n  const timeOfDay = icon.slice(-1); // Get 'd' for day or 'n' for night\n  const localImage = getWeatherImage(description, timeOfDay); // Get the local image\n\n  const dailyData = forecastData.list.filter((item, index) => index % 8 === 0).slice(0, 7); // Assuming `forecastData` is the 7-day data\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-3xl p-8 mb-8 shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800\",\n      children: \"Current Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: localImage || `http://openweathermap.org/img/wn/${icon}@2x.png`,\n        alt: description,\n        className: \"w-20 h-20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-bold text-gray-800\",\n        children: [Math.round(main.temp), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800\",\n      children: \"7-Day Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 sm:grid-cols-4 md:grid-cols-7 gap-4\",\n      children: dailyData.map((day, index) => {\n        const dayDescription = day.weather[0].description.toLowerCase();\n        const dayIcon = day.weather[0].icon;\n        const dayTimeOfDay = dayIcon.slice(-1);\n        const dayLocalImage = getWeatherImage(dayDescription, dayTimeOfDay);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 rounded-2xl p-4 flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold text-gray-700 mb-2\",\n            children: new Date(day.dt * 1000).toLocaleDateString([], {\n              weekday: 'short'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: dayLocalImage || `http://openweathermap.org/img/wn/${dayIcon}@2x.png` // Fallback to OpenWeather image\n            ,\n            alt: dayDescription,\n            className: \"w-16 h-16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl font-bold text-gray-800 mt-2\",\n            children: [Math.round(day.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: day.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = WeeklyForecast;\nexport default WeeklyForecast;\nvar _c;\n$RefreshReg$(_c, \"WeeklyForecast\");","map":{"version":3,"names":["React","weatherIcons","jsxDEV","_jsxDEV","getWeatherImage","description","timeOfDay","includes","clear_sky_day","clear_sky_night","cloudy_day","cloudy_night","rain","frost","WeeklyForecast","currentWeather","forecastData","weather","main","dt","toLowerCase","icon","slice","localImage","dailyData","list","filter","item","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","Math","round","temp","map","day","dayDescription","dayIcon","dayTimeOfDay","dayLocalImage","Date","toLocaleDateString","weekday","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/src/components/WeeklyForecast.jsx"],"sourcesContent":["import React from 'react';\nimport weatherIcons from './weatherIcons'; // Import the local weather images\n\nconst getWeatherImage = (description, timeOfDay) => {\n  if (description.includes(\"clear sky\")) {\n    return timeOfDay === 'd' ? weatherIcons.clear_sky_day : weatherIcons.clear_sky_night;\n  } else if (description.includes(\"cloudy\")) {\n    return timeOfDay === 'd' ? weatherIcons.cloudy_day : weatherIcons.cloudy_night;\n  } else if (description.includes(\"rain\")) {\n    return weatherIcons.rain;\n  } else if (description.includes(\"frost\")) {\n    return weatherIcons.frost;\n  } \n  return null; // No match found\n};\n\nconst WeeklyForecast = ({ currentWeather, forecastData }) => {\n  const { weather, main, dt } = currentWeather;\n  const description = weather[0].description.toLowerCase();\n  const icon = weather[0].icon;\n  const timeOfDay = icon.slice(-1); // Get 'd' for day or 'n' for night\n  const localImage = getWeatherImage(description, timeOfDay); // Get the local image\n\n  const dailyData = forecastData.list.filter((item, index) => index % 8 === 0).slice(0, 7); // Assuming `forecastData` is the 7-day data\n\n  return (\n    <div className=\"bg-white rounded-3xl p-8 mb-8 shadow-lg\">\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800\">Current Weather</h2>\n      <div className=\"flex flex-col items-center mb-6\">\n        <img src={localImage || `http://openweathermap.org/img/wn/${icon}@2x.png`} alt={description} className=\"w-20 h-20\" />\n        <p className=\"text-xl font-bold text-gray-800\">{Math.round(main.temp)}°C</p>\n        <p className=\"text-sm text-gray-600\">{description}</p>\n      </div>\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800\">7-Day Forecast</h2>\n      <div className=\"grid grid-cols-2 sm:grid-cols-4 md:grid-cols-7 gap-4\">\n        {dailyData.map((day, index) => {\n          const dayDescription = day.weather[0].description.toLowerCase();\n          const dayIcon = day.weather[0].icon;\n          const dayTimeOfDay = dayIcon.slice(-1);\n          const dayLocalImage = getWeatherImage(dayDescription, dayTimeOfDay);\n\n          return (\n            <div key={index} className=\"bg-gray-100 rounded-2xl p-4 flex flex-col items-center\">\n              <p className=\"font-semibold text-gray-700 mb-2\">\n                {new Date(day.dt * 1000).toLocaleDateString([], { weekday: 'short' })}\n              </p>\n              <img\n                src={dayLocalImage || `http://openweathermap.org/img/wn/${dayIcon}@2x.png`} // Fallback to OpenWeather image\n                alt={dayDescription}\n                className=\"w-16 h-16\"\n              />\n              <p className=\"text-xl font-bold text-gray-800 mt-2\">{Math.round(day.main.temp)}°C</p>\n              <p className=\"text-sm text-gray-600\">{day.weather[0].main}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklyForecast;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}