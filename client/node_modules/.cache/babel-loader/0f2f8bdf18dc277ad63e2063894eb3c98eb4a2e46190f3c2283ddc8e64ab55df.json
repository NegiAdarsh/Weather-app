{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/src/components/WeeklyForecast.jsx\";\nimport React from 'react';\nimport weatherIcons from './WeatherIcons'; // Import the weather icons mapping\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getWeatherImage = (description, timeOfDay) => {\n  if (description.includes(\"clear sky\")) {\n    return timeOfDay === 'd' ? weatherIcons.clear_sky_day : weatherIcons.clear_sky_night;\n  } else if (description.includes(\"cloudy\")) {\n    return timeOfDay === 'd' ? weatherIcons.cloudy_day : weatherIcons.cloudy_night;\n  } else if (description.includes(\"rain\")) {\n    return weatherIcons.rain;\n  } else if (description.includes(\"frost\")) {\n    return weatherIcons.frost;\n  }\n  return null; // No match found\n};\nconst WeeklyForecast = ({\n  data\n}) => {\n  const dailyData = data.list.filter((item, index) => index % 8 === 0).slice(0, 7);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-3xl p-8 mb-8 shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800\",\n      children: \"7-Day Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 sm:grid-cols-4 md:grid-cols-7 gap-4\",\n      children: dailyData.map((day, index) => {\n        const description = day.weather[0].description.toLowerCase();\n        const icon = day.weather[0].icon;\n        const timeOfDay = icon.slice(-1); // Get 'd' for day or 'n' for night\n        const localImage = getWeatherImage(description, timeOfDay); // Get the local image\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 rounded-2xl p-4 flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold text-gray-700 mb-2\",\n            children: new Date(day.dt * 1000).toLocaleDateString([], {\n              weekday: 'short'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: localImage || `http://openweathermap.org/img/wn/${icon}@2x.png` // Fallback to OpenWeather image\n            ,\n            alt: description,\n            className: \"w-16 h-16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl font-bold text-gray-800 mt-2\",\n            children: [Math.round(day.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: day.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = WeeklyForecast;\nexport default WeeklyForecast;\nvar _c;\n$RefreshReg$(_c, \"WeeklyForecast\");","map":{"version":3,"names":["React","weatherIcons","jsxDEV","_jsxDEV","getWeatherImage","description","timeOfDay","includes","clear_sky_day","clear_sky_night","cloudy_day","cloudy_night","rain","frost","WeeklyForecast","data","dailyData","list","filter","item","index","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","day","weather","toLowerCase","icon","localImage","Date","dt","toLocaleDateString","weekday","src","alt","Math","round","main","temp","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/src/components/WeeklyForecast.jsx"],"sourcesContent":["import React from 'react';\nimport weatherIcons from './WeatherIcons'; // Import the weather icons mapping\n\nconst getWeatherImage = (description, timeOfDay) => {\n  if (description.includes(\"clear sky\")) {\n    return timeOfDay === 'd' ? weatherIcons.clear_sky_day : weatherIcons.clear_sky_night;\n  } else if (description.includes(\"cloudy\")) {\n    return timeOfDay === 'd' ? weatherIcons.cloudy_day : weatherIcons.cloudy_night;\n  } else if (description.includes(\"rain\")) {\n    return weatherIcons.rain;\n  } else if (description.includes(\"frost\")) {\n    return weatherIcons.frost;\n  } \n  return null; // No match found\n};\n\nconst WeeklyForecast = ({ data }) => {\n  const dailyData = data.list.filter((item, index) => index % 8 === 0).slice(0, 7);\n\n  return (\n    <div className=\"bg-white rounded-3xl p-8 mb-8 shadow-lg\">\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800\">7-Day Forecast</h2>\n      <div className=\"grid grid-cols-2 sm:grid-cols-4 md:grid-cols-7 gap-4\">\n        {dailyData.map((day, index) => {\n          const description = day.weather[0].description.toLowerCase();\n          const icon = day.weather[0].icon;\n          const timeOfDay = icon.slice(-1); // Get 'd' for day or 'n' for night\n          const localImage = getWeatherImage(description, timeOfDay); // Get the local image\n\n          return (\n            <div key={index} className=\"bg-gray-100 rounded-2xl p-4 flex flex-col items-center\">\n              <p className=\"font-semibold text-gray-700 mb-2\">\n                {new Date(day.dt * 1000).toLocaleDateString([], { weekday: 'short' })}\n              </p>\n              <img\n                src={localImage || `http://openweathermap.org/img/wn/${icon}@2x.png`} // Fallback to OpenWeather image\n                alt={description}\n                className=\"w-16 h-16\"\n              />\n              <p className=\"text-xl font-bold text-gray-800 mt-2\">{Math.round(day.main.temp)}Â°C</p>\n              <p className=\"text-sm text-gray-600\">{day.weather[0].main}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklyForecast;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,eAAe,GAAGA,CAACC,WAAW,EAAEC,SAAS,KAAK;EAClD,IAAID,WAAW,CAACE,QAAQ,CAAC,WAAW,CAAC,EAAE;IACrC,OAAOD,SAAS,KAAK,GAAG,GAAGL,YAAY,CAACO,aAAa,GAAGP,YAAY,CAACQ,eAAe;EACtF,CAAC,MAAM,IAAIJ,WAAW,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAAE;IACzC,OAAOD,SAAS,KAAK,GAAG,GAAGL,YAAY,CAACS,UAAU,GAAGT,YAAY,CAACU,YAAY;EAChF,CAAC,MAAM,IAAIN,WAAW,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;IACvC,OAAON,YAAY,CAACW,IAAI;EAC1B,CAAC,MAAM,IAAIP,WAAW,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE;IACxC,OAAON,YAAY,CAACY,KAAK;EAC3B;EACA,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACnC,MAAMC,SAAS,GAAGD,IAAI,CAACE,IAAI,CAACC,MAAM,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAEhF,oBACElB,OAAA;IAAKmB,SAAS,EAAC,yCAAyC;IAAAC,QAAA,gBACtDpB,OAAA;MAAImB,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzExB,OAAA;MAAKmB,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAClEP,SAAS,CAACY,GAAG,CAAC,CAACC,GAAG,EAAET,KAAK,KAAK;QAC7B,MAAMf,WAAW,GAAGwB,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,CAACzB,WAAW,CAAC0B,WAAW,CAAC,CAAC;QAC5D,MAAMC,IAAI,GAAGH,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,CAACE,IAAI;QAChC,MAAM1B,SAAS,GAAG0B,IAAI,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,MAAMY,UAAU,GAAG7B,eAAe,CAACC,WAAW,EAAEC,SAAS,CAAC,CAAC,CAAC;;QAE5D,oBACEH,OAAA;UAAiBmB,SAAS,EAAC,wDAAwD;UAAAC,QAAA,gBACjFpB,OAAA;YAAGmB,SAAS,EAAC,kCAAkC;YAAAC,QAAA,EAC5C,IAAIW,IAAI,CAACL,GAAG,CAACM,EAAE,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;cAAEC,OAAO,EAAE;YAAQ,CAAC;UAAC;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpE,CAAC,eACJxB,OAAA;YACEmC,GAAG,EAAEL,UAAU,IAAI,oCAAoCD,IAAI,SAAU,CAAC;YAAA;YACtEO,GAAG,EAAElC,WAAY;YACjBiB,SAAS,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACFxB,OAAA;YAAGmB,SAAS,EAAC,sCAAsC;YAAAC,QAAA,GAAEiB,IAAI,CAACC,KAAK,CAACZ,GAAG,CAACa,IAAI,CAACC,IAAI,CAAC,EAAC,OAAE;UAAA;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACrFxB,OAAA;YAAGmB,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAEM,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,CAACY;UAAI;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAVtDP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWV,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACiB,EAAA,GA/BI9B,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}