{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Search } from 'lucide-react';\nimport CurrentWeather from './components/CurrentWeather';\nimport Highlights from './components/Highlights';\nimport WeeklyForecast from './components/WeeklyForecast';\nimport HourlyForecast from './components/HourlyForecast';\nimport BackgroundVideo from './components/BackgroundVideo';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Profile from './components/Profile';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'e4ba4b05eee9251d041f4745a2222fce';\nconst API_BASE_URL = 'https://api.openweathermap.org/data/2.5';\nconst suggestedCities = ['Delhi', 'Mumbai', 'Chennai', 'Bangalore', 'Kolkata', 'Hyderabad'];\nfunction App() {\n  _s();\n  const [searchInput, setSearchInput] = useState(''); // State for search input\n  const [activeCity, setActiveCity] = useState(''); // State for the active city\n  const [weatherData, setWeatherData] = useState(null); // State for current weather data\n  const [forecast, setForecast] = useState(null); // State for forecast data\n  const [loading, setLoading] = useState(false); // State for loading status\n  const [error, setError] = useState(null); // State for error messages\n  const [unit, setUnit] = useState('metric'); // State for temperature unit\n  const [intervalId, setIntervalId] = useState(null); // State for managing interval\n\n  // Fetch weather and forecast data for the given city and unit\n  const fetchWeatherData = useCallback(async (cityName, tempUnit) => {\n    if (!cityName) return;\n    setLoading(true);\n    setError(null);\n    try {\n      // Set the units parameter if 'metric' is selected\n      const unitParam = tempUnit === 'metric' ? `&units=metric` : '';\n\n      // URLs for current weather and forecast\n      const weatherUrl = `${API_BASE_URL}/weather?q=${cityName}${unitParam}&appid=${API_KEY}`;\n      const forecastUrl = `${API_BASE_URL}/forecast?q=${cityName}${unitParam}&appid=${API_KEY}`;\n\n      // Fetch both weather and forecast data concurrently\n      const [weatherResponse, forecastResponse] = await Promise.all([fetch(weatherUrl), fetch(forecastUrl)]);\n      if (!weatherResponse.ok || !forecastResponse.ok) {\n        throw new Error('City not found or data unavailable');\n      }\n\n      // Parse the responses into JSON\n      const [weather, forecast] = await Promise.all([weatherResponse.json(), forecastResponse.json()]);\n      setWeatherData(weather); // Set weather data\n      setForecast(forecast); // Set forecast data\n      setActiveCity(cityName); // Set the active city\n    } catch (err) {\n      setError(err.message); // Set error message if request fails\n    } finally {\n      setLoading(false); // Stop loading indicator\n    }\n  }, []);\n\n  // Change the temperature unit and fetch weather data for the active city\n  const handleUnitChange = useCallback(newUnit => {\n    setUnit(newUnit); // Update unit state\n    if (activeCity) {\n      fetchWeatherData(activeCity, newUnit); // Refetch data with new unit\n    }\n  }, [activeCity, fetchWeatherData]);\n\n  // Function to handle city search and selection\n  const handleCitySelect = useCallback(cityName => {\n    if (cityName.trim()) {\n      setSearchInput(cityName); // Update search input state\n      fetchWeatherData(cityName, unit); // Fetch data for the selected city\n\n      // Clear any existing interval\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      // Set an interval to refresh data every 5 minutes (300,000 milliseconds)\n      const id = setInterval(() => {\n        fetchWeatherData(cityName, unit); // Fetch data automatically every 5 minutes\n      }, 300000);\n      setIntervalId(id); // Store the interval ID\n    }\n  }, [unit, fetchWeatherData, intervalId]);\n\n  // Handle form submission for city search\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent page reload\n    handleCitySelect(searchInput); // Trigger city selection based on input\n  };\n\n  // Handle suggested city clicks\n  const handleSuggestionClick = suggestedCity => {\n    handleCitySelect(suggestedCity); // Trigger city selection when a suggested city is clicked\n  };\n\n  // Clean up interval when component unmounts\n  useEffect(() => {\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId); // Clear interval on unmount\n      }\n    };\n  }, [intervalId]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [weatherData && /*#__PURE__*/_jsxDEV(BackgroundVideo, {\n        weatherCondition: weatherData.weather[0].description,\n        icon: weatherData.weather[0].icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-4xl font-bold mb-8 text-center text-gray-800\",\n                children: \"Weather Forecast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                className: \"mb-8 flex justify-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative w-full max-w-md\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: searchInput,\n                    onChange: e => setSearchInput(e.target.value),\n                    placeholder: \"Enter city name\",\n                    className: \"w-full p-4 pr-12 text-gray-700 bg-white border-2 border-gray-300 rounded-full focus:outline-none focus:border-blue-500 transition duration-300\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"absolute right-2 top-2 bg-blue-500 text-white p-2 rounded-full hover:bg-blue-600 transition duration-300\",\n                    disabled: loading // Disable button while loading\n                    ,\n                    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-6 h-6 border-t-2 border-white border-solid rounded-full animate-spin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 19\n                    }, this) : /*#__PURE__*/_jsxDEV(Search, {\n                      size: 24\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"mr-4 text-gray-700\",\n                  children: \"Temperature Unit:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleUnitChange('metric'),\n                    className: `px-4 py-2 rounded-full transition-colors ${unit === 'metric' ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700'}`,\n                    children: \"Celsius\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleUnitChange('kelvin'),\n                    className: `px-4 py-2 rounded-full transition-colors ${unit === 'kelvin' ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700'}`,\n                    children: \"Kelvin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 11\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-8 rounded\",\n                role: \"alert\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-bold\",\n                  children: \"Error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-8\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-lg font-bold\",\n                  children: \"Popular Cities:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-wrap gap-2\",\n                  children: suggestedCities.map(city => /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleSuggestionClick(city),\n                    className: \"suggestion-bubble\",\n                    children: city\n                  }, city, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 17\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 11\n              }, this), weatherData && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n                data: weatherData,\n                unit: unit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 27\n              }, this), weatherData && /*#__PURE__*/_jsxDEV(Highlights, {\n                data: weatherData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 27\n              }, this), forecast && /*#__PURE__*/_jsxDEV(WeeklyForecast, {\n                data: forecast,\n                unit: unit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 24\n              }, this), forecast && /*#__PURE__*/_jsxDEV(HourlyForecast, {\n                data: forecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            component: Register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            component: Profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IIa6kbFrKdfQnb6MP/M8d05qjak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Search","CurrentWeather","Highlights","WeeklyForecast","HourlyForecast","BackgroundVideo","BrowserRouter","Router","Route","Switch","Login","Register","Profile","jsxDEV","_jsxDEV","API_KEY","API_BASE_URL","suggestedCities","App","_s","searchInput","setSearchInput","activeCity","setActiveCity","weatherData","setWeatherData","forecast","setForecast","loading","setLoading","error","setError","unit","setUnit","intervalId","setIntervalId","fetchWeatherData","cityName","tempUnit","unitParam","weatherUrl","forecastUrl","weatherResponse","forecastResponse","Promise","all","fetch","ok","Error","weather","json","err","message","handleUnitChange","newUnit","handleCitySelect","trim","clearInterval","id","setInterval","handleSubmit","e","preventDefault","handleSuggestionClick","suggestedCity","children","className","weatherCondition","description","icon","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","component","onSubmit","type","value","onChange","target","placeholder","disabled","size","onClick","role","map","city","data","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Search } from 'lucide-react';\nimport CurrentWeather from './components/CurrentWeather';\nimport Highlights from './components/Highlights';\nimport WeeklyForecast from './components/WeeklyForecast';\nimport HourlyForecast from './components/HourlyForecast';\nimport BackgroundVideo from './components/BackgroundVideo';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Profile from './components/Profile';\nimport './App.css';\n\nconst API_KEY = 'e4ba4b05eee9251d041f4745a2222fce';\nconst API_BASE_URL = 'https://api.openweathermap.org/data/2.5';\n\nconst suggestedCities = ['Delhi', 'Mumbai', 'Chennai', 'Bangalore', 'Kolkata', 'Hyderabad'];\n\nfunction App() {\n  const [searchInput, setSearchInput] = useState(''); // State for search input\n  const [activeCity, setActiveCity] = useState(''); // State for the active city\n  const [weatherData, setWeatherData] = useState(null); // State for current weather data\n  const [forecast, setForecast] = useState(null); // State for forecast data\n  const [loading, setLoading] = useState(false); // State for loading status\n  const [error, setError] = useState(null); // State for error messages\n  const [unit, setUnit] = useState('metric'); // State for temperature unit\n  const [intervalId, setIntervalId] = useState(null); // State for managing interval\n\n  // Fetch weather and forecast data for the given city and unit\n  const fetchWeatherData = useCallback(async (cityName, tempUnit) => {\n    if (!cityName) return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Set the units parameter if 'metric' is selected\n      const unitParam = tempUnit === 'metric' ? `&units=metric` : '';\n\n      // URLs for current weather and forecast\n      const weatherUrl = `${API_BASE_URL}/weather?q=${cityName}${unitParam}&appid=${API_KEY}`;\n      const forecastUrl = `${API_BASE_URL}/forecast?q=${cityName}${unitParam}&appid=${API_KEY}`;\n\n      // Fetch both weather and forecast data concurrently\n      const [weatherResponse, forecastResponse] = await Promise.all([\n        fetch(weatherUrl),\n        fetch(forecastUrl)\n      ]);\n\n      if (!weatherResponse.ok || !forecastResponse.ok) {\n        throw new Error('City not found or data unavailable');\n      }\n\n      // Parse the responses into JSON\n      const [weather, forecast] = await Promise.all([\n        weatherResponse.json(),\n        forecastResponse.json()\n      ]);\n\n      setWeatherData(weather); // Set weather data\n      setForecast(forecast); // Set forecast data\n      setActiveCity(cityName); // Set the active city\n    } catch (err) {\n      setError(err.message); // Set error message if request fails\n    } finally {\n      setLoading(false); // Stop loading indicator\n    }\n  }, []);\n\n  // Change the temperature unit and fetch weather data for the active city\n  const handleUnitChange = useCallback((newUnit) => {\n    setUnit(newUnit); // Update unit state\n    if (activeCity) {\n      fetchWeatherData(activeCity, newUnit); // Refetch data with new unit\n    }\n  }, [activeCity, fetchWeatherData]);\n\n  // Function to handle city search and selection\n  const handleCitySelect = useCallback((cityName) => {\n    if (cityName.trim()) {\n      setSearchInput(cityName); // Update search input state\n      fetchWeatherData(cityName, unit); // Fetch data for the selected city\n\n      // Clear any existing interval\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      // Set an interval to refresh data every 5 minutes (300,000 milliseconds)\n      const id = setInterval(() => {\n        fetchWeatherData(cityName, unit); // Fetch data automatically every 5 minutes\n      }, 300000);\n      \n      setIntervalId(id); // Store the interval ID\n    }\n  }, [unit, fetchWeatherData, intervalId]);\n\n  // Handle form submission for city search\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent page reload\n    handleCitySelect(searchInput); // Trigger city selection based on input\n  };\n\n  // Handle suggested city clicks\n  const handleSuggestionClick = (suggestedCity) => {\n    handleCitySelect(suggestedCity); // Trigger city selection when a suggested city is clicked\n  };\n\n  // Clean up interval when component unmounts\n  useEffect(() => {\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId); // Clear interval on unmount\n      }\n    };\n  }, [intervalId]);\n\n  return (\n    <Router>\n    <div className=\"app-container\">\n      {/* Render the background video component if weather data is available */}\n      {weatherData && (\n        <BackgroundVideo\n          weatherCondition={weatherData.weather[0].description}\n          icon={weatherData.weather[0].icon}\n        />\n      )}\n      \n      {/* Main content container */}\n      <div className=\"content-container\">\n        <Switch>\n        <Route exact path=\"/\" component={() => (\n        <div className=\"weather-card\">\n          <h1 className=\"text-4xl font-bold mb-8 text-center text-gray-800\">\n            Weather Forecast\n          </h1>\n\n          {/* Search form */}\n          <form onSubmit={handleSubmit} className=\"mb-8 flex justify-center\">\n            <div className=\"relative w-full max-w-md\">\n              <input\n                type=\"text\"\n                value={searchInput}\n                onChange={(e) => setSearchInput(e.target.value)}\n                placeholder=\"Enter city name\"\n                className=\"w-full p-4 pr-12 text-gray-700 bg-white border-2 border-gray-300 rounded-full focus:outline-none focus:border-blue-500 transition duration-300\"\n              />\n              <button \n                type=\"submit\" \n                className=\"absolute right-2 top-2 bg-blue-500 text-white p-2 rounded-full hover:bg-blue-600 transition duration-300\"\n                disabled={loading} // Disable button while loading\n              >\n                {loading ? (\n                  <div className=\"w-6 h-6 border-t-2 border-white border-solid rounded-full animate-spin\" />\n                ) : (\n                  <Search size={24} />\n                )}\n              </button>\n            </div>\n          </form>\n\n          {/* Temperature unit toggle buttons */}\n          <div className=\"flex items-center justify-center mb-4\">\n            <label className=\"mr-4 text-gray-700\">Temperature Unit:</label>\n            <div className=\"flex space-x-2\">\n              <button\n                onClick={() => handleUnitChange('metric')}\n                className={`px-4 py-2 rounded-full transition-colors ${\n                  unit === 'metric' ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700'\n                }`}\n              >\n                Celsius\n              </button>\n              <button\n                onClick={() => handleUnitChange('kelvin')}\n                className={`px-4 py-2 rounded-full transition-colors ${\n                  unit === 'kelvin' ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700'\n                }`}\n              >\n                Kelvin\n              </button>\n            </div>\n          </div>\n\n          {/* Display error message if there's any */}\n          {error && (\n            <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-8 rounded\" role=\"alert\">\n              <p className=\"font-bold\">Error</p>\n              <p>{error}</p>\n            </div>\n          )}\n\n          {/* Suggested cities */}\n          <div className=\"mb-8\">\n            <h2 className=\"text-lg font-bold\">Popular Cities:</h2>\n            <div className=\"flex flex-wrap gap-2\">\n              {suggestedCities.map((city) => (\n                <button\n                  key={city}\n                  onClick={() => handleSuggestionClick(city)}\n                  className=\"suggestion-bubble\"\n                >\n                  {city}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Weather and forecast display */}\n          {weatherData && <CurrentWeather data={weatherData} unit={unit} />}\n          {weatherData && <Highlights data={weatherData} />}\n          {forecast && <WeeklyForecast data={forecast} unit={unit} />}\n          {forecast && <HourlyForecast data={forecast} />}\n        </div>\n         )} />\n         <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/profile\" component={Profile} />\n          </Switch>\n      </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}