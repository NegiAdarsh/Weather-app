{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/TemperatureGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale,\n// for X-axis\nLinearScale,\n// for Y-axis\nPointElement, LineElement, Title, Tooltip, Legend);\nconst TemperatureGraph = () => {\n  _s();\n  const [violationData, setViolationData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchViolations = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('You need to log in to see temperature data.');\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:3001/api/users/violations', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-auth-token': token\n          }\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.msg || 'Failed to fetch temperature data');\n        }\n        const data = await response.json();\n        setViolationData(data);\n      } catch (err) {\n        setError('An error occurred while fetching temperature data. Please try again later.');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchViolations();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading temperature data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 21\n  }, this);\n  const timestamps = violationData.map(violation => new Date(violation.timestamp).toLocaleString());\n  const thresholdValues = violationData.map(violation => violation.thresholdValue);\n  const recordedTemps = violationData.map(violation => violation.recordedTemperature);\n  const data = {\n    labels: timestamps,\n    datasets: [{\n      label: 'Threshold Temperature',\n      data: thresholdValues,\n      fill: false,\n      borderColor: 'red',\n      borderWidth: 2,\n      tension: 0.1\n    }, {\n      label: 'Recorded Temperature',\n      data: recordedTemps,\n      fill: false,\n      borderColor: 'blue',\n      borderWidth: 2,\n      tension: 0.1\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Time'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Temperature (°C)'\n        }\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Temperature Threshold vs Recorded Temperature'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Temperature Variation Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(TemperatureGraph, \"5ZWzfjwA+YJ8XcPaC38RL2ICqso=\");\n_c = TemperatureGraph;\nexport default TemperatureGraph;\nvar _c;\n$RefreshReg$(_c, \"TemperatureGraph\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","TemperatureGraph","_s","violationData","setViolationData","loading","setLoading","error","setError","fetchViolations","token","localStorage","getItem","response","fetch","method","headers","ok","errorData","json","Error","msg","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","timestamps","map","violation","Date","timestamp","toLocaleString","thresholdValues","thresholdValue","recordedTemps","recordedTemperature","labels","datasets","label","fill","borderColor","borderWidth","tension","options","scales","x","title","display","text","y","responsive","plugins","legend","position","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/TemperatureGraph.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\n\n// Register the components\nChartJS.register(\n  CategoryScale,  // for X-axis\n  LinearScale,    // for Y-axis\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst TemperatureGraph = () => {\n  const [violationData, setViolationData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchViolations = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('You need to log in to see temperature data.');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const response = await fetch('http://localhost:3001/api/users/violations', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-auth-token': token,\n          },\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.msg || 'Failed to fetch temperature data');\n        }\n\n        const data = await response.json();\n        setViolationData(data);\n      } catch (err) {\n        setError('An error occurred while fetching temperature data. Please try again later.');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchViolations();\n  }, []);\n\n  if (loading) return <div>Loading temperature data...</div>;\n  if (error) return <div className=\"error-message\">{error}</div>;\n\n  const timestamps = violationData.map(violation => new Date(violation.timestamp).toLocaleString());\n  const thresholdValues = violationData.map(violation => violation.thresholdValue);\n  const recordedTemps = violationData.map(violation => violation.recordedTemperature);\n\n  const data = {\n    labels: timestamps,\n    datasets: [\n      {\n        label: 'Threshold Temperature',\n        data: thresholdValues,\n        fill: false,\n        borderColor: 'red',\n        borderWidth: 2,\n        tension: 0.1,\n      },\n      {\n        label: 'Recorded Temperature',\n        data: recordedTemps,\n        fill: false,\n        borderColor: 'blue',\n        borderWidth: 2,\n        tension: 0.1,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Time',\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Temperature (°C)',\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Temperature Threshold vs Recorded Temperature',\n      },\n    },\n  };\n\n  return (\n    <div>\n      <h2>Temperature Variation Graph</h2>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\nexport default TemperatureGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}