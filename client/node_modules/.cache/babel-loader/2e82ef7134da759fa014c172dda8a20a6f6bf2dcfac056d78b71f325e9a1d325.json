{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CurrentWeather from './CurrentWeather'; // Make sure this import is correct\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [unit, setUnit] = useState('metric'); // Default to Celsius\n  const navigate = useNavigate();\n  const apiKey = 'e4ba4b05eee9251d041f4745a2222fce'; // Your OpenWeather API key\n  const [weatherData, setWeatherData] = useState([]);\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/users/profile', {\n          headers: {\n            'x-auth-token': localStorage.getItem('token')\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setUser(data.user);\n          await fetchWeatherData(data.user.searched_locations); // Fetch weather data for searched locations\n        } else {\n          const errorData = await response.json();\n          setError(errorData.msg);\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Profile fetch error:', error);\n        setError('An error occurred while fetching the profile.');\n        navigate('/login');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProfile();\n  }, [navigate]);\n\n  // Define fetchWeatherData here\n  const fetchWeatherData = async cities => {\n    if (cities.length > 0) {\n      const promises = cities.map(city => fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit}&appid=${apiKey}`).then(res => res.json()));\n      const weatherResponses = await Promise.all(promises);\n      setWeatherData(weatherResponses);\n    }\n  };\n  const addCity = async () => {\n    if (!newCity) return;\n    try {\n      const response = await fetch('http://localhost:3001/api/users/addCity', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-auth-token': localStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          city: newCity\n        })\n      });\n      if (response.ok) {\n        const updatedUser = await response.json();\n        setUser(updatedUser.user);\n        setNewCity('');\n        await fetchWeatherData([...user.searched_locations, newCity]); // Fetch weather data for the new city\n      } else {\n        const errorData = await response.json();\n        setError(errorData.msg);\n      }\n    } catch (error) {\n      console.error('Error adding city:', error);\n      setError('An error occurred while adding the city.');\n    }\n  };\n  const removeCity = async city => {\n    try {\n      const response = await fetch('http://localhost:3001/api/users/removeCity', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-auth-token': localStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          city\n        })\n      });\n      if (response.ok) {\n        const updatedUser = await response.json();\n        setUser(updatedUser.user);\n        await fetchWeatherData(updatedUser.user.searched_locations); // Fetch weather data for remaining cities\n      } else {\n        const errorData = await response.json();\n        setError(errorData.msg);\n      }\n    } catch (error) {\n      console.error('Error removing city:', error);\n      setError('An error occurred while removing the city.');\n    }\n  };\n  const toggleUnit = () => {\n    setUnit(prevUnit => prevUnit === 'metric' ? 'standard' : 'metric'); // Toggle between metric and standard\n    // Fetch weather data again with the new unit\n    if (user) {\n      fetchWeatherData(user.searched_locations);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading profile...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Home City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.home_city || 'Not set'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Weather Alerts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), user.weather_alerts && user.weather_alerts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"alert-list\",\n          children: user.weather_alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [alert.location, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), \" \", alert.alert_type, \" (Threshold: \", alert.threshold_value, \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No weather alerts set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recently Searched Locations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-city\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newCity,\n            onChange: e => setNewCity(e.target.value),\n            placeholder: \"Add a new city\",\n            className: \"city-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addCity,\n            className: \"add-city-button\",\n            children: \"Add City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), user.searched_locations && user.searched_locations.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"location-list\",\n          children: user.searched_locations.map((location, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"location-item\",\n            children: [location, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeCity(location),\n              className: \"remove-city-button\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No recent searches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unit-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Select Unit:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `suggestion-bubble ${unit === 'metric' ? 'active' : ''}`,\n            onClick: () => {\n              setUnit('metric'); // Set unit to metric (Celsius)\n              fetchWeatherData(user.searched_locations); // Fetch weather data for searched locations\n            },\n            children: \"Celsius\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `suggestion-bubble ${unit === 'standard' ? 'active' : ''}`,\n            onClick: () => {\n              setUnit('standard'); // Set unit to standard (Kelvin)\n              fetchWeatherData(user.searched_locations); // Fetch weather data for searched locations\n            },\n            children: \"Kelvin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Weather in Searched Locations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), weatherData.length > 0 ? weatherData.map((data, index) => /*#__PURE__*/_jsxDEV(CurrentWeather, {\n          data: data,\n          unit: unit\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No weather data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"KSOs3FV3la+MLQFSenLjfsblzlE=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CurrentWeather","jsxDEV","_jsxDEV","Profile","_s","user","setUser","loading","setLoading","error","setError","newCity","setNewCity","unit","setUnit","navigate","apiKey","weatherData","setWeatherData","fetchProfile","response","fetch","headers","localStorage","getItem","ok","data","json","fetchWeatherData","searched_locations","errorData","msg","console","cities","length","promises","map","city","then","res","weatherResponses","Promise","all","addCity","method","body","JSON","stringify","updatedUser","removeCity","toggleUnit","prevUnit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","email","home_city","weather_alerts","alert","index","location","alert_type","threshold_value","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CurrentWeather from './CurrentWeather'; // Make sure this import is correct\nimport './Profile.css';\n\nconst Profile = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [newCity, setNewCity] = useState('');\n  const [unit, setUnit] = useState('metric'); // Default to Celsius\n  const navigate = useNavigate();\n  const apiKey = 'e4ba4b05eee9251d041f4745a2222fce'; // Your OpenWeather API key\n  const [weatherData, setWeatherData] = useState([]);\n\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/users/profile', {\n          headers: {\n            'x-auth-token': localStorage.getItem('token')\n          }\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setUser(data.user);\n          await fetchWeatherData(data.user.searched_locations); // Fetch weather data for searched locations\n        } else {\n          const errorData = await response.json();\n          setError(errorData.msg);\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Profile fetch error:', error);\n        setError('An error occurred while fetching the profile.');\n        navigate('/login');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProfile();\n  }, [navigate]);\n\n  // Define fetchWeatherData here\n  const fetchWeatherData = async (cities) => {\n    if (cities.length > 0) {\n      const promises = cities.map((city) =>\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit}&appid=${apiKey}`)\n          .then((res) => res.json())\n      );\n      const weatherResponses = await Promise.all(promises);\n      setWeatherData(weatherResponses);\n    }\n  };\n\n  const addCity = async () => {\n    if (!newCity) return;\n\n    try {\n      const response = await fetch('http://localhost:3001/api/users/addCity', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-auth-token': localStorage.getItem('token')\n        },\n        body: JSON.stringify({ city: newCity })\n      });\n\n      if (response.ok) {\n        const updatedUser = await response.json();\n        setUser(updatedUser.user);\n        setNewCity('');\n        await fetchWeatherData([...user.searched_locations, newCity]); // Fetch weather data for the new city\n      } else {\n        const errorData = await response.json();\n        setError(errorData.msg);\n      }\n    } catch (error) {\n      console.error('Error adding city:', error);\n      setError('An error occurred while adding the city.');\n    }\n  };\n\n  const removeCity = async (city) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/users/removeCity', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-auth-token': localStorage.getItem('token')\n        },\n        body: JSON.stringify({ city })\n      });\n\n      if (response.ok) {\n        const updatedUser = await response.json();\n        setUser(updatedUser.user);\n        await fetchWeatherData(updatedUser.user.searched_locations); // Fetch weather data for remaining cities\n      } else {\n        const errorData = await response.json();\n        setError(errorData.msg);\n      }\n    } catch (error) {\n      console.error('Error removing city:', error);\n      setError('An error occurred while removing the city.');\n    }\n  };\n\n  const toggleUnit = () => {\n    setUnit((prevUnit) => (prevUnit === 'metric' ? 'standard' : 'metric')); // Toggle between metric and standard\n    // Fetch weather data again with the new unit\n    if (user) {\n      fetchWeatherData(user.searched_locations);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading profile...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error-message\">{error}</div>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <h2>User Profile</h2>\n      {user ? (\n        <div className=\"profile-details\">\n          <div className=\"profile-item\">\n            <strong>Username:</strong> <span>{user.username}</span>\n          </div>\n          <div className=\"profile-item\">\n            <strong>Email:</strong> <span>{user.email}</span>\n          </div>\n          <div className=\"profile-item\">\n            <strong>Home City:</strong> <span>{user.home_city || 'Not set'}</span>\n          </div>\n\n          <div className=\"profile-section\">\n            <h3>Weather Alerts</h3>\n            {user.weather_alerts && user.weather_alerts.length > 0 ? (\n              <ul className=\"alert-list\">\n                {user.weather_alerts.map((alert, index) => (\n                  <li key={index}>\n                    <strong>{alert.location}:</strong> {alert.alert_type} (Threshold: {alert.threshold_value})\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <p>No weather alerts set</p>\n            )}\n          </div>\n\n          <div className=\"profile-section\">\n            <h3>Recently Searched Locations</h3>\n            <div className=\"add-city\">\n              <input\n                type=\"text\"\n                value={newCity}\n                onChange={(e) => setNewCity(e.target.value)}\n                placeholder=\"Add a new city\"\n                className=\"city-input\"\n              />\n              <button onClick={addCity} className=\"add-city-button\">Add City</button>\n            </div>\n            {user.searched_locations && user.searched_locations.length > 0 ? (\n              <ul className=\"location-list\">\n                {user.searched_locations.map((location, index) => (\n                  <li key={index} className=\"location-item\">\n                    {location}\n                    <button onClick={() => removeCity(location)} className=\"remove-city-button\">Remove</button>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <p>No recent searches</p>\n            )}\n          </div>\n\n          <div className=\"unit-toggle\">\n  <span>Select Unit:</span>\n  <div className=\"bubble-container\">\n    <button\n      className={`suggestion-bubble ${unit === 'metric' ? 'active' : ''}`}\n      onClick={() => {\n        setUnit('metric'); // Set unit to metric (Celsius)\n        fetchWeatherData(user.searched_locations); // Fetch weather data for searched locations\n      }}\n    >\n      Celsius\n    </button>\n    <button\n      className={`suggestion-bubble ${unit === 'standard' ? 'active' : ''}`}\n      onClick={() => {\n        setUnit('standard'); // Set unit to standard (Kelvin)\n        fetchWeatherData(user.searched_locations); // Fetch weather data for searched locations\n      }}\n    >\n      Kelvin\n    </button>\n  </div>\n</div>\n\n\n\n\n\n          <div className=\"weather-section\">\n            <h3>Current Weather in Searched Locations</h3>\n            {weatherData.length > 0 ? (\n              weatherData.map((data, index) => (\n                <CurrentWeather key={index} data={data} unit={unit} />\n              ))\n            ) : (\n              <p>No weather data available.</p>\n            )}\n          </div>\n        </div>\n      ) : (\n        <p>Loading user data...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}