{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/src/components/BackgroundVideo.jsx\";\nimport React from 'react';\nimport clearSkyDay from '../videos/weather/clear_sky_day.mp4';\nimport clearSkyNight from '../videos/weather/clear_sky_night.mp4';\nimport cloudyDay from '../videos/weather/cloudy_sky_day.mp4';\nimport cloudyNight from '../videos/weather/cloudy_sky_night.mp4';\nimport rain from '../videos/weather/rain.mp4';\nimport snow from '../videos/weather/snow.mp4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundVideo = ({\n  weatherCondition,\n  icon\n}) => {\n  const weatherVideos = {\n    'clear sky day': clearSkyDay,\n    'clear sky night': clearSkyNight,\n    'cloudy day': cloudyDay,\n    'cloudy night': cloudyNight,\n    'rain': rain,\n    'snow': snow\n  };\n  const timeOfDay = icon.endsWith('d') ? 'day' : 'night';\n  let videoKey;\n  if (weatherCondition.includes('rain')) {\n    videoKey = 'rain';\n  } else if (weatherCondition.includes('snow')) {\n    videoKey = 'snow';\n  } else if (weatherCondition.includes('clouds') || weatherCondition.includes('cloudy')) {\n    videoKey = `cloudy ${timeOfDay}`;\n  } else if (weatherCondition.includes('clear sky')) {\n    videoKey = `clear sky ${timeOfDay}`;\n  } else {\n    videoKey = 'default'; // You can set a default video key if none match\n  }\n  const videoUrl = weatherVideos[videoKey];\n  console.log(\"Selected video URL:\", videoUrl);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    autoPlay: true,\n    loop: true,\n    muted: true,\n    className: \"background-video\",\n    children: [/*#__PURE__*/_jsxDEV(\"source\", {\n      src: videoUrl,\n      type: \"video/mp4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), \"Your browser does not support the video tag.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = BackgroundVideo;\nexport default BackgroundVideo;\nvar _c;\n$RefreshReg$(_c, \"BackgroundVideo\");","map":{"version":3,"names":["React","clearSkyDay","clearSkyNight","cloudyDay","cloudyNight","rain","snow","jsxDEV","_jsxDEV","BackgroundVideo","weatherCondition","icon","weatherVideos","timeOfDay","endsWith","videoKey","includes","videoUrl","console","log","autoPlay","loop","muted","className","children","src","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/src/components/BackgroundVideo.jsx"],"sourcesContent":["import React from 'react';\nimport clearSkyDay from '../videos/weather/clear_sky_day.mp4';\nimport clearSkyNight from '../videos/weather/clear_sky_night.mp4';\nimport cloudyDay from '../videos/weather/cloudy_sky_day.mp4';\nimport cloudyNight from '../videos/weather/cloudy_sky_night.mp4';\nimport rain from '../videos/weather/rain.mp4';\nimport snow from '../videos/weather/snow.mp4';\n\nconst BackgroundVideo = ({ weatherCondition, icon }) => {\n  const weatherVideos = {\n    'clear sky day': clearSkyDay,\n    'clear sky night': clearSkyNight,\n    'cloudy day': cloudyDay,\n    'cloudy night': cloudyNight,\n    'rain': rain,\n    'snow': snow,\n  };\n  \n  const timeOfDay = icon.endsWith('d') ? 'day' : 'night';\n\n  let videoKey;\n\n  if (weatherCondition.includes('rain')) {\n    videoKey = 'rain';\n  } else if (weatherCondition.includes('snow')) {\n    videoKey = 'snow';\n  } else if (weatherCondition.includes('clouds') || weatherCondition.includes('cloudy')) {\n    videoKey = `cloudy ${timeOfDay}`;\n  } else if (weatherCondition.includes('clear sky')) {\n    videoKey = `clear sky ${timeOfDay}`;\n  } else {\n    videoKey = 'default'; // You can set a default video key if none match\n  }\n\n  const videoUrl = weatherVideos[videoKey];\n\n  console.log(\"Selected video URL:\", videoUrl);\n\n  return (\n    <video autoPlay loop muted className=\"background-video\">\n      <source src={videoUrl} type=\"video/mp4\" />\n      Your browser does not support the video tag.\n    </video>\n  );\n};\n\nexport default BackgroundVideo;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,qCAAqC;AAC7D,OAAOC,aAAa,MAAM,uCAAuC;AACjE,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,WAAW,MAAM,wCAAwC;AAChE,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,IAAI,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,eAAe,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC;AAAK,CAAC,KAAK;EACtD,MAAMC,aAAa,GAAG;IACpB,eAAe,EAAEX,WAAW;IAC5B,iBAAiB,EAAEC,aAAa;IAChC,YAAY,EAAEC,SAAS;IACvB,cAAc,EAAEC,WAAW;IAC3B,MAAM,EAAEC,IAAI;IACZ,MAAM,EAAEC;EACV,CAAC;EAED,MAAMO,SAAS,GAAGF,IAAI,CAACG,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,OAAO;EAEtD,IAAIC,QAAQ;EAEZ,IAAIL,gBAAgB,CAACM,QAAQ,CAAC,MAAM,CAAC,EAAE;IACrCD,QAAQ,GAAG,MAAM;EACnB,CAAC,MAAM,IAAIL,gBAAgB,CAACM,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC5CD,QAAQ,GAAG,MAAM;EACnB,CAAC,MAAM,IAAIL,gBAAgB,CAACM,QAAQ,CAAC,QAAQ,CAAC,IAAIN,gBAAgB,CAACM,QAAQ,CAAC,QAAQ,CAAC,EAAE;IACrFD,QAAQ,GAAG,UAAUF,SAAS,EAAE;EAClC,CAAC,MAAM,IAAIH,gBAAgB,CAACM,QAAQ,CAAC,WAAW,CAAC,EAAE;IACjDD,QAAQ,GAAG,aAAaF,SAAS,EAAE;EACrC,CAAC,MAAM;IACLE,QAAQ,GAAG,SAAS,CAAC,CAAC;EACxB;EAEA,MAAME,QAAQ,GAAGL,aAAa,CAACG,QAAQ,CAAC;EAExCG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ,CAAC;EAE5C,oBACET,OAAA;IAAOY,QAAQ;IAACC,IAAI;IAACC,KAAK;IAACC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBACrDhB,OAAA;MAAQiB,GAAG,EAAER,QAAS;MAACS,IAAI,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gDAE5C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAEZ,CAAC;AAACC,EAAA,GApCItB,eAAe;AAsCrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}