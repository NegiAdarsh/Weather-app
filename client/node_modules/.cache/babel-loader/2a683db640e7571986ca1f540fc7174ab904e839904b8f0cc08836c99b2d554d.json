{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/TemperatureGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// eslint-disable-next-line\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemperatureGraph = ({\n  violations\n}) => {\n  _s();\n  const [groupedData, setGroupedData] = useState({});\n  useEffect(() => {\n    // Group violations by location (city)\n    const grouped = violations.reduce((acc, violation) => {\n      if (!acc[violation.location]) {\n        acc[violation.location] = [];\n      }\n      acc[violation.location].push(violation);\n      return acc;\n    }, {});\n    setGroupedData(grouped);\n  }, [violations]);\n  const renderGraphs = () => {\n    return Object.keys(groupedData).map(location => {\n      const cityViolations = groupedData[location];\n      const labels = cityViolations.map(violation => new Date(violation.timestamp).toLocaleString());\n      const thresholdValues = cityViolations.map(violation => violation.thresholdValue);\n      const recordedTemperatures = cityViolations.map(violation => violation.recordedTemperature);\n      const data = {\n        labels,\n        datasets: [{\n          label: 'Threshold Temperature (째C)',\n          data: thresholdValues,\n          borderColor: 'red',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          fill: false,\n          tension: 0.1\n        }, {\n          label: 'Recorded Temperature (째C)',\n          data: recordedTemperatures,\n          borderColor: 'blue',\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          fill: false,\n          tension: 0.1\n        }]\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4\",\n          children: [location, \" Temperature Violations\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, location, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(groupedData).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No temperature violations to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : renderGraphs()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(TemperatureGraph, \"XGjZ0L7muXjrZG3JkJ2mGvbi6AI=\");\n_c = TemperatureGraph;\nexport default TemperatureGraph;\nvar _c;\n$RefreshReg$(_c, \"TemperatureGraph\");","map":{"version":3,"names":["React","useEffect","useState","Line","jsxDEV","_jsxDEV","TemperatureGraph","violations","_s","groupedData","setGroupedData","grouped","reduce","acc","violation","location","push","renderGraphs","Object","keys","map","cityViolations","labels","Date","timestamp","toLocaleString","thresholdValues","thresholdValue","recordedTemperatures","recordedTemperature","data","datasets","label","borderColor","backgroundColor","fill","tension","style","marginBottom","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/TemperatureGraph.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n// eslint-disable-next-line\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nconst TemperatureGraph = ({ violations }) => {\n  const [groupedData, setGroupedData] = useState({});\n\n  useEffect(() => {\n    // Group violations by location (city)\n    const grouped = violations.reduce((acc, violation) => {\n      if (!acc[violation.location]) {\n        acc[violation.location] = [];\n      }\n      acc[violation.location].push(violation);\n      return acc;\n    }, {});\n    setGroupedData(grouped);\n  }, [violations]);\n\n  const renderGraphs = () => {\n    return Object.keys(groupedData).map((location) => {\n      const cityViolations = groupedData[location];\n\n      const labels = cityViolations.map(violation =>\n        new Date(violation.timestamp).toLocaleString()\n      );\n\n      const thresholdValues = cityViolations.map(violation => violation.thresholdValue);\n      const recordedTemperatures = cityViolations.map(violation => violation.recordedTemperature);\n\n      const data = {\n        labels,\n        datasets: [\n          {\n            label: 'Threshold Temperature (째C)',\n            data: thresholdValues,\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            fill: false,\n            tension: 0.1,\n          },\n          {\n            label: 'Recorded Temperature (째C)',\n            data: recordedTemperatures,\n            borderColor: 'blue',\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            fill: false,\n            tension: 0.1,\n          }\n        ]\n      };\n\n      return (\n        <div key={location} style={{ marginBottom: '40px' }}>\n          <h3 className=\"text-xl font-bold mb-4\">{location} Temperature Violations</h3>\n          <Line data={data} />\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div>\n      {Object.keys(groupedData).length === 0 ? (\n        <div>No temperature violations to display.</div>\n      ) : (\n        renderGraphs()\n      )}\n    </div>\n  );\n};\n\nexport default TemperatureGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}