{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/WeatherAlert.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherAlerts = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.log('No token found, redirecting to login.');\n      navigate('/login'); // Redirect to the login page if not logged in\n      return; // Exit early to prevent further execution\n    }\n    try {\n      // Decode the JWT token to extract user information\n      const userData = JSON.parse(atob(token.split('.')[1])); // Decode JWT token payload\n      console.log('User data from token:', userData); // Log user data for debugging\n      setUser(userData);\n    } catch (error) {\n      console.error('Failed to decode token:', error);\n      navigate('/login'); // Redirect if there's an error in decoding\n    } finally {\n      setLoading(false); // Set loading to false at the end of the check\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), loading ?\n    /*#__PURE__*/\n    // Show loading state while checking the token\n    _jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : user ?\n    /*#__PURE__*/\n    // Show user information if logged in\n    _jsxDEV(\"h3\", {\n      children: [\"Welcome, \", user.username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Redirecting to login...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) // Optional message before redirect\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherAlerts, \"bMs6vkxBNdJdvAQTZITyVwx4nss=\", false, function () {\n  return [useNavigate];\n});\n_c = WeatherAlerts;\nexport default WeatherAlerts;\nvar _c;\n$RefreshReg$(_c, \"WeatherAlerts\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","WeatherAlerts","_s","navigate","user","setUser","loading","setLoading","token","localStorage","getItem","console","log","userData","JSON","parse","atob","split","error","children","fileName","_jsxFileName","lineNumber","columnNumber","username","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/WeatherAlert.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst WeatherAlerts = () => {\n    const navigate = useNavigate();\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true); // Loading state\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        \n        if (!token) {\n            console.log('No token found, redirecting to login.');\n            navigate('/login'); // Redirect to the login page if not logged in\n            return; // Exit early to prevent further execution\n        }\n\n        try {\n            // Decode the JWT token to extract user information\n            const userData = JSON.parse(atob(token.split('.')[1])); // Decode JWT token payload\n            console.log('User data from token:', userData); // Log user data for debugging\n            setUser(userData);\n        } catch (error) {\n            console.error('Failed to decode token:', error);\n            navigate('/login'); // Redirect if there's an error in decoding\n        } finally {\n            setLoading(false); // Set loading to false at the end of the check\n        }\n    }, [navigate]);\n\n    return (\n        <div>\n            <h2>Weather Alerts</h2>\n            {loading ? ( // Show loading state while checking the token\n                <h3>Loading...</h3>\n            ) : user ? ( // Show user information if logged in\n                <h3>Welcome, {user.username}!</h3>\n            ) : (\n                <h3>Redirecting to login...</h3> // Optional message before redirect\n            )}\n        </div>\n    );\n};\n\nexport default WeatherAlerts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACZ,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACRG,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACpDT,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACpB,OAAO,CAAC;IACZ;IAEA,IAAI;MACA;MACA,MAAMU,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACR,KAAK,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxDN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,QAAQ,CAAC,CAAC,CAAC;MAChDR,OAAO,CAACQ,QAAQ,CAAC;IACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/Cf,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxB,CAAC,SAAS;MACNI,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBjB,OAAO;IAAA;IAAK;IACTN,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GACnBnB,IAAI;IAAA;IAAK;IACTJ,OAAA;MAAAmB,QAAA,GAAI,WAAS,EAACf,IAAI,CAACoB,QAAQ,EAAC,GAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAElCvB,OAAA;MAAAmB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,CAAC;IACpC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACrB,EAAA,CAvCID,aAAa;EAAA,QACEH,WAAW;AAAA;AAAA2B,EAAA,GAD1BxB,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}