{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/TemperatureGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TemperatureGraph = ({\n  violations\n}) => {\n  _s();\n  const [groupedData, setGroupedData] = useState({});\n  useEffect(() => {\n    // Group violations by location (city) and alert type\n    const grouped = violations.reduce((acc, violation) => {\n      const {\n        location,\n        alertType\n      } = violation;\n\n      // Create a nested structure: { location: { temp: [], wind: [] } }\n      if (!acc[location]) {\n        acc[location] = {\n          temp: [],\n          wind: []\n        };\n      }\n      if (alertType === 'temp_above' || alertType === 'temp_below') {\n        acc[location].temp.push(violation);\n      } else if (alertType === 'wind_speed_above') {\n        acc[location].wind.push(violation);\n      }\n      return acc;\n    }, {});\n    setGroupedData(grouped);\n  }, [violations]);\n  const renderTemperatureGraphs = cityViolations => {\n    const labels = cityViolations.map(violation => new Date(violation.timestamp).toLocaleString());\n    const tempAbove = cityViolations.filter(v => v.alertType === 'temp_above').map(violation => violation.recordedTemperature);\n    const tempBelow = cityViolations.filter(v => v.alertType === 'temp_below').map(violation => violation.recordedTemperature);\n    const thresholdValues = cityViolations.map(violation => violation.thresholdValue);\n    const data = {\n      labels,\n      datasets: [{\n        label: 'Threshold Temperature (°C)',\n        data: thresholdValues,\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        fill: false,\n        tension: 0.1\n      }, {\n        label: 'Recorded Temperature Above Threshold (°C)',\n        data: tempAbove,\n        borderColor: 'blue',\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        fill: false,\n        tension: 0.1\n      }, {\n        label: 'Recorded Temperature Below Threshold (°C)',\n        data: tempBelow,\n        borderColor: 'green',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        fill: false,\n        tension: 0.1\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  };\n  const renderWindGraph = cityViolations => {\n    const labels = cityViolations.map(violation => new Date(violation.timestamp).toLocaleString());\n    const recordedWindSpeed = cityViolations.map(violation => violation.recordedWindSpeed);\n    const thresholdValues = cityViolations.map(violation => violation.thresholdValue);\n    const data = {\n      labels,\n      datasets: [{\n        label: 'Threshold Wind Speed (km/h)',\n        data: thresholdValues,\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        fill: false,\n        tension: 0.1\n      }, {\n        label: 'Recorded Wind Speed (km/h)',\n        data: recordedWindSpeed,\n        borderColor: 'blue',\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        fill: false,\n        tension: 0.1\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 12\n    }, this);\n  };\n  const renderGraphs = () => {\n    return Object.keys(groupedData).map(location => {\n      const cityData = groupedData[location];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4\",\n          children: [location, \" Temperature Violations\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), cityData.temp.length > 0 ? renderTemperatureGraphs(cityData.temp) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No temperature violations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 80\n        }, this), cityData.wind.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mt-6 mb-4\",\n            children: [location, \" Wind Speed Violations\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), renderWindGraph(cityData.wind)]\n        }, void 0, true)]\n      }, location, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(groupedData).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No temperature or wind speed violations to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this) : renderGraphs()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(TemperatureGraph, \"XGjZ0L7muXjrZG3JkJ2mGvbi6AI=\");\n_c = TemperatureGraph;\nexport default TemperatureGraph;\nvar _c;\n$RefreshReg$(_c, \"TemperatureGraph\");","map":{"version":3,"names":["React","useEffect","useState","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","TemperatureGraph","violations","_s","groupedData","setGroupedData","grouped","reduce","acc","violation","location","alertType","temp","wind","push","renderTemperatureGraphs","cityViolations","labels","map","Date","timestamp","toLocaleString","tempAbove","filter","v","recordedTemperature","tempBelow","thresholdValues","thresholdValue","data","datasets","label","borderColor","backgroundColor","fill","tension","fileName","_jsxFileName","lineNumber","columnNumber","renderWindGraph","recordedWindSpeed","renderGraphs","Object","keys","cityData","style","marginBottom","children","className","length","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/TemperatureGraph.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nconst TemperatureGraph = ({ violations }) => {\n  const [groupedData, setGroupedData] = useState({});\n\n  useEffect(() => {\n    // Group violations by location (city) and alert type\n    const grouped = violations.reduce((acc, violation) => {\n      const { location, alertType } = violation;\n\n      // Create a nested structure: { location: { temp: [], wind: [] } }\n      if (!acc[location]) {\n        acc[location] = { temp: [], wind: [] };\n      }\n\n      if (alertType === 'temp_above' || alertType === 'temp_below') {\n        acc[location].temp.push(violation);\n      } else if (alertType === 'wind_speed_above') {\n        acc[location].wind.push(violation);\n      }\n\n      return acc;\n    }, {});\n\n    setGroupedData(grouped);\n  }, [violations]);\n\n  const renderTemperatureGraphs = (cityViolations) => {\n    const labels = cityViolations.map(violation =>\n      new Date(violation.timestamp).toLocaleString()\n    );\n\n    const tempAbove = cityViolations\n      .filter(v => v.alertType === 'temp_above')\n      .map(violation => violation.recordedTemperature);\n\n    const tempBelow = cityViolations\n      .filter(v => v.alertType === 'temp_below')\n      .map(violation => violation.recordedTemperature);\n\n    const thresholdValues = cityViolations.map(violation => violation.thresholdValue);\n\n    const data = {\n      labels,\n      datasets: [\n        {\n          label: 'Threshold Temperature (°C)',\n          data: thresholdValues,\n          borderColor: 'red',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          fill: false,\n          tension: 0.1,\n        },\n        {\n          label: 'Recorded Temperature Above Threshold (°C)',\n          data: tempAbove,\n          borderColor: 'blue',\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          fill: false,\n          tension: 0.1,\n        },\n        {\n          label: 'Recorded Temperature Below Threshold (°C)',\n          data: tempBelow,\n          borderColor: 'green',\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          fill: false,\n          tension: 0.1,\n        }\n      ]\n    };\n\n    return <Line data={data} />;\n  };\n\n  const renderWindGraph = (cityViolations) => {\n    const labels = cityViolations.map(violation =>\n      new Date(violation.timestamp).toLocaleString()\n    );\n\n    const recordedWindSpeed = cityViolations.map(violation => violation.recordedWindSpeed);\n    const thresholdValues = cityViolations.map(violation => violation.thresholdValue);\n\n    const data = {\n      labels,\n      datasets: [\n        {\n          label: 'Threshold Wind Speed (km/h)',\n          data: thresholdValues,\n          borderColor: 'red',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          fill: false,\n          tension: 0.1,\n        },\n        {\n          label: 'Recorded Wind Speed (km/h)',\n          data: recordedWindSpeed,\n          borderColor: 'blue',\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          fill: false,\n          tension: 0.1,\n        }\n      ]\n    };\n\n    return <Line data={data} />;\n  };\n\n  const renderGraphs = () => {\n    return Object.keys(groupedData).map((location) => {\n      const cityData = groupedData[location];\n\n      return (\n        <div key={location} style={{ marginBottom: '40px' }}>\n          <h3 className=\"text-xl font-bold mb-4\">{location} Temperature Violations</h3>\n          {cityData.temp.length > 0 ? renderTemperatureGraphs(cityData.temp) : <p>No temperature violations</p>}\n          \n          {cityData.wind.length > 0 && (\n            <>\n              <h3 className=\"text-xl font-bold mt-6 mb-4\">{location} Wind Speed Violations</h3>\n              {renderWindGraph(cityData.wind)}\n            </>\n          )}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div>\n      {Object.keys(groupedData).length === 0 ? (\n        <div>No temperature or wind speed violations to display.</div>\n      ) : (\n        renderGraphs()\n      )}\n    </div>\n  );\n};\n\nexport default TemperatureGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}