{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Search } from 'lucide-react';\nimport CurrentWeather from './components/CurrentWeather';\nimport Highlights from './components/Highlights';\nimport WeeklyForecast from './components/WeeklyForecast';\nimport HourlyForecast from './components/HourlyForecast';\nimport BackgroundVideo from './components/BackgroundVideo';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'; // Use Routes instead of Switch for v6\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Profile from './components/Profile';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WeatherAlerts from './components/WeatherAlert';\nimport WeatherStats from './components/WeatherStats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'e4ba4b05eee9251d041f4745a2222fce';\nconst API_BASE_URL = 'https://api.openweathermap.org/data/2.5';\nconst suggestedCities = ['Delhi', 'Mumbai', 'Chennai', 'Bangalore', 'Kolkata', 'Hyderabad'];\nfunction App() {\n  _s();\n  const [searchInput, setSearchInput] = useState(''); // State for search input\n  const [activeCity, setActiveCity] = useState(''); // State for the active city\n  const [weatherData, setWeatherData] = useState(null); // State for current weather data\n  const [forecast, setForecast] = useState(null); // State for forecast data\n  const [loading, setLoading] = useState(false); // State for loading status\n  const [error, setError] = useState(null); // State for error messages\n  const [unit, setUnit] = useState('metric'); // State for temperature unit\n  const [intervalId, setIntervalId] = useState(null); // State for managing interval\n\n  // Fetch weather and forecast data for the given city and unit\n  const fetchWeatherData = useCallback(async (cityName, tempUnit) => {\n    if (!cityName) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const unitParam = tempUnit === 'metric' ? `&units=metric` : '';\n      const weatherUrl = `${API_BASE_URL}/weather?q=${cityName}${unitParam}&appid=${API_KEY}`;\n      const forecastUrl = `${API_BASE_URL}/forecast?q=${cityName}${unitParam}&appid=${API_KEY}`;\n      const [weatherResponse, forecastResponse] = await Promise.all([fetch(weatherUrl), fetch(forecastUrl)]);\n      if (!weatherResponse.ok || !forecastResponse.ok) {\n        throw new Error('City not found or data unavailable');\n      }\n      const [weather, forecast] = await Promise.all([weatherResponse.json(), forecastResponse.json()]);\n      setWeatherData(weather); // Set weather data\n      setForecast(forecast); // Set forecast data\n      setActiveCity(cityName); // Set the active city\n    } catch (err) {\n      setError(err.message); // Set error message if request fails\n    } finally {\n      setLoading(false); // Stop loading indicator\n    }\n  }, []);\n\n  // Change the temperature unit and fetch weather data for the active city\n  const handleUnitChange = useCallback(newUnit => {\n    setUnit(newUnit); // Update unit state\n    if (activeCity) {\n      fetchWeatherData(activeCity, newUnit); // Refetch data with new unit\n    }\n  }, [activeCity, fetchWeatherData]);\n\n  // Function to handle city search and selection\n  const handleCitySelect = useCallback(cityName => {\n    if (cityName.trim()) {\n      setSearchInput(cityName); // Update search input state\n      fetchWeatherData(cityName, unit); // Fetch data for the selected city\n\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n      const id = setInterval(() => {\n        fetchWeatherData(cityName, unit); // Fetch data automatically every 5 minutes\n      }, 300000);\n      setIntervalId(id); // Store the interval ID\n    }\n  }, [unit, fetchWeatherData, intervalId]);\n\n  // Handle form submission for city search\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent page reload\n    handleCitySelect(searchInput); // Trigger city selection based on input\n  };\n\n  // Handle suggested city clicks\n  const handleSuggestionClick = suggestedCity => {\n    handleCitySelect(suggestedCity); // Trigger city selection when a suggested city is clicked\n  };\n\n  // Clean up interval when component unmounts\n  useEffect(() => {\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId); // Clear interval on unmount\n      }\n    };\n  }, [intervalId]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), weatherData && /*#__PURE__*/_jsxDEV(BackgroundVideo, {\n        weatherCondition: weatherData.weather[0].description,\n        icon: weatherData.weather[0].icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-4xl font-bold mb-8 text-center text-gray-800\",\n                children: \"Weather Forecast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                className: \"mb-8 flex justify-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative w-full max-w-md\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: searchInput,\n                    onChange: e => setSearchInput(e.target.value),\n                    placeholder: \"Enter city name\",\n                    className: \"w-full p-4 pr-12 text-gray-700 bg-white border-2 border-gray-300 rounded-full focus:outline-none focus:border-blue-500 transition duration-300\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"absolute right-2 top-2 bg-blue-500 text-white p-2 rounded-full hover:bg-blue-600 transition duration-300\",\n                    disabled: loading,\n                    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-6 h-6 border-t-2 border-white border-solid rounded-full animate-spin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(Search, {\n                      size: 24\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"mr-4 text-gray-700\",\n                  children: \"Temperature Unit:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleUnitChange('metric'),\n                    className: `temp-button ${unit === 'metric' ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700'}`,\n                    children: \"Celsius\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleUnitChange('kelvin'),\n                    className: `temp-button ${unit === 'kelvin' ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700'}`,\n                    children: \"Kelvin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-8 rounded\",\n                role: \"alert\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-bold\",\n                  children: \"Error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-8\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-lg font-bold\",\n                  children: \"Popular Cities:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-wrap gap-2\",\n                  children: suggestedCities.map(city => /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleSuggestionClick(city),\n                    className: \"suggestion-bubble\",\n                    children: city\n                  }, city, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), weatherData && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n                data: weatherData,\n                unit: unit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 35\n              }, this), weatherData && /*#__PURE__*/_jsxDEV(Highlights, {\n                data: weatherData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 35\n              }, this), forecast && /*#__PURE__*/_jsxDEV(WeeklyForecast, {\n                data: forecast,\n                unit: unit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 32\n              }, this), forecast && /*#__PURE__*/_jsxDEV(HourlyForecast, {\n                data: forecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/weather-alerts\",\n            element: /*#__PURE__*/_jsxDEV(WeatherAlerts, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/stats\",\n            element: /*#__PURE__*/_jsxDEV(WeatherStats, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IIa6kbFrKdfQnb6MP/M8d05qjak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Search","CurrentWeather","Highlights","WeeklyForecast","HourlyForecast","BackgroundVideo","BrowserRouter","Router","Route","Routes","Login","Register","Profile","Navbar","WeatherAlerts","WeatherStats","jsxDEV","_jsxDEV","API_KEY","API_BASE_URL","suggestedCities","App","_s","searchInput","setSearchInput","activeCity","setActiveCity","weatherData","setWeatherData","forecast","setForecast","loading","setLoading","error","setError","unit","setUnit","intervalId","setIntervalId","fetchWeatherData","cityName","tempUnit","unitParam","weatherUrl","forecastUrl","weatherResponse","forecastResponse","Promise","all","fetch","ok","Error","weather","json","err","message","handleUnitChange","newUnit","handleCitySelect","trim","clearInterval","id","setInterval","handleSubmit","e","preventDefault","handleSuggestionClick","suggestedCity","children","className","fileName","_jsxFileName","lineNumber","columnNumber","weatherCondition","description","icon","path","element","onSubmit","type","value","onChange","target","placeholder","disabled","size","onClick","role","map","city","data","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Search } from 'lucide-react';\nimport CurrentWeather from './components/CurrentWeather';\nimport Highlights from './components/Highlights';\nimport WeeklyForecast from './components/WeeklyForecast';\nimport HourlyForecast from './components/HourlyForecast';\nimport BackgroundVideo from './components/BackgroundVideo';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'; // Use Routes instead of Switch for v6\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Profile from './components/Profile';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport WeatherAlerts from './components/WeatherAlert';\nimport WeatherStats from './components/WeatherStats';\n\nconst API_KEY = 'e4ba4b05eee9251d041f4745a2222fce';\nconst API_BASE_URL = 'https://api.openweathermap.org/data/2.5';\n\nconst suggestedCities = ['Delhi', 'Mumbai', 'Chennai', 'Bangalore', 'Kolkata', 'Hyderabad'];\n\nfunction App() {\n  const [searchInput, setSearchInput] = useState(''); // State for search input\n  const [activeCity, setActiveCity] = useState(''); // State for the active city\n  const [weatherData, setWeatherData] = useState(null); // State for current weather data\n  const [forecast, setForecast] = useState(null); // State for forecast data\n  const [loading, setLoading] = useState(false); // State for loading status\n  const [error, setError] = useState(null); // State for error messages\n  const [unit, setUnit] = useState('metric'); // State for temperature unit\n  const [intervalId, setIntervalId] = useState(null); // State for managing interval\n\n  // Fetch weather and forecast data for the given city and unit\n  const fetchWeatherData = useCallback(async (cityName, tempUnit) => {\n    if (!cityName) return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const unitParam = tempUnit === 'metric' ? `&units=metric` : '';\n      const weatherUrl = `${API_BASE_URL}/weather?q=${cityName}${unitParam}&appid=${API_KEY}`;\n      const forecastUrl = `${API_BASE_URL}/forecast?q=${cityName}${unitParam}&appid=${API_KEY}`;\n\n      const [weatherResponse, forecastResponse] = await Promise.all([\n        fetch(weatherUrl),\n        fetch(forecastUrl)\n      ]);\n\n      if (!weatherResponse.ok || !forecastResponse.ok) {\n        throw new Error('City not found or data unavailable');\n      }\n\n      const [weather, forecast] = await Promise.all([\n        weatherResponse.json(),\n        forecastResponse.json()\n      ]);\n\n      setWeatherData(weather); // Set weather data\n      setForecast(forecast); // Set forecast data\n      setActiveCity(cityName); // Set the active city\n    } catch (err) {\n      setError(err.message); // Set error message if request fails\n    } finally {\n      setLoading(false); // Stop loading indicator\n    }\n  }, []);\n\n  // Change the temperature unit and fetch weather data for the active city\n  const handleUnitChange = useCallback((newUnit) => {\n    setUnit(newUnit); // Update unit state\n    if (activeCity) {\n      fetchWeatherData(activeCity, newUnit); // Refetch data with new unit\n    }\n  }, [activeCity, fetchWeatherData]);\n\n  // Function to handle city search and selection\n  const handleCitySelect = useCallback((cityName) => {\n    if (cityName.trim()) {\n      setSearchInput(cityName); // Update search input state\n      fetchWeatherData(cityName, unit); // Fetch data for the selected city\n\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      const id = setInterval(() => {\n        fetchWeatherData(cityName, unit); // Fetch data automatically every 5 minutes\n      }, 300000);\n      \n      setIntervalId(id); // Store the interval ID\n    }\n  }, [unit, fetchWeatherData, intervalId]);\n\n  // Handle form submission for city search\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent page reload\n    handleCitySelect(searchInput); // Trigger city selection based on input\n  };\n\n  // Handle suggested city clicks\n  const handleSuggestionClick = (suggestedCity) => {\n    handleCitySelect(suggestedCity); // Trigger city selection when a suggested city is clicked\n  };\n\n  // Clean up interval when component unmounts\n  useEffect(() => {\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId); // Clear interval on unmount\n      }\n    };\n  }, [intervalId]);\n\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <Navbar/>\n        {weatherData && (\n          <BackgroundVideo\n            weatherCondition={weatherData.weather[0].description}\n            icon={weatherData.weather[0].icon}\n          />\n        )}\n        \n        <div className=\"content-container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={(\n                <div className=\"weather-card\">\n                  <h1 className=\"text-4xl font-bold mb-8 text-center text-gray-800\">\n                    Weather Forecast\n                  </h1>\n\n                  <form onSubmit={handleSubmit} className=\"mb-8 flex justify-center\">\n                    <div className=\"relative w-full max-w-md\">\n                      <input\n                        type=\"text\"\n                        value={searchInput}\n                        onChange={(e) => setSearchInput(e.target.value)}\n                        placeholder=\"Enter city name\"\n                        className=\"w-full p-4 pr-12 text-gray-700 bg-white border-2 border-gray-300 rounded-full focus:outline-none focus:border-blue-500 transition duration-300\"\n                      />\n                      <button \n                        type=\"submit\" \n                        className=\"absolute right-2 top-2 bg-blue-500 text-white p-2 rounded-full hover:bg-blue-600 transition duration-300\"\n                        disabled={loading}\n                      >\n                        {loading ? (\n                          <div className=\"w-6 h-6 border-t-2 border-white border-solid rounded-full animate-spin\" />\n                        ) : (\n                          <Search size={24} />\n                        )}\n                      </button>\n                    </div>\n                  </form>\n\n                  <div className=\"flex items-center justify-center mb-4\">\n                    <label className=\"mr-4 text-gray-700\">Temperature Unit:</label>\n                    <div className=\"flex space-x-2\">\n                      <button\n                        onClick={() => handleUnitChange('metric')}\n                        className={`temp-button ${\n                          unit === 'metric' ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700'\n                        }`}\n                      >\n                        Celsius\n                      </button>\n                      <button\n                        onClick={() => handleUnitChange('kelvin')}\n                        className={`temp-button ${\n                          unit === 'kelvin' ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-700'\n                        }`}\n                      >\n                        Kelvin\n                      </button>\n                    </div>\n                  </div>\n\n                  {error && (\n                    <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-8 rounded\" role=\"alert\">\n                      <p className=\"font-bold\">Error</p>\n                      <p>{error}</p>\n                    </div>\n                  )}\n\n                  <div className=\"mb-8\">\n                    <h2 className=\"text-lg font-bold\">Popular Cities:</h2>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {suggestedCities.map((city) => (\n                        <button\n                          key={city}\n                          onClick={() => handleSuggestionClick(city)}\n                          className=\"suggestion-bubble\"\n                        >\n                          {city}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n\n                  {weatherData && <CurrentWeather data={weatherData} unit={unit} />}\n                  {weatherData && <Highlights data={weatherData} />}\n                  {forecast && <WeeklyForecast data={forecast} unit={unit} />}\n                  {forecast && <HourlyForecast data={forecast} />}\n                </div>\n              )}\n            />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/profile\" element={<Profile />} />\n            <Route path='/weather-alerts' element={<WeatherAlerts/>} />\n            <Route path='/stats' element={<WeatherStats/>} />\n\n          </Routes>\n        </div> \n      </div>\n    </Router>\n  );\n}  \n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}