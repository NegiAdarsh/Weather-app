{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CurrentWeather from './CurrentWeather'; // Import your CurrentWeather component\nimport './Profile.css'; // Make sure to create this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [weatherData, setWeatherData] = useState([]);\n  const [unit, setUnit] = useState('metric'); // Default to metric (Celsius)\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/users/profile', {\n          headers: {\n            'x-auth-token': localStorage.getItem('token')\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setUser(data.user);\n          fetchWeatherData(data.user.searched_locations); // Fetch weather data for searched locations\n        } else {\n          const errorData = await response.json();\n          setError(errorData.msg);\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Profile fetch error:', error);\n        setError('An error occurred while fetching the profile.');\n        navigate('/login');\n      } finally {\n        setLoading(false);\n      }\n    };\n    const fetchWeatherData = async cities => {\n      if (cities.length > 0) {\n        const apiKey = 'e4ba4b05eee9251d041f4745a2222fce';\n        const promises = cities.map(city => fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit}&appid=${apiKey}`).then(res => res.json()));\n        const weatherResponses = await Promise.all(promises);\n        setWeatherData(weatherResponses);\n      }\n    };\n    fetchProfile();\n  }, [navigate, unit]); // Fetch data again when the unit changes\n\n  const toggleUnit = () => {\n    setUnit(prevUnit => prevUnit === 'metric' ? 'standard' : 'metric'); // Toggle between metric and standard\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading profile...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }, this), \" \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }, this), \" \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Home City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 14\n        }, this), \" \", user.home_city || 'Not set']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unit-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: unit === 'metric',\n            onChange: toggleUnit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), unit === 'metric' ? 'Switch to Kelvin' : 'Switch to Celsius']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Weather in Searched Locations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), weatherData.length > 0 ? weatherData.map((data, index) => /*#__PURE__*/_jsxDEV(CurrentWeather, {\n          data: data,\n          unit: unit\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No weather data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"jE9ShzTYtGFvyphV/DybE02QWeQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CurrentWeather","jsxDEV","_jsxDEV","Profile","_s","user","setUser","loading","setLoading","error","setError","weatherData","setWeatherData","unit","setUnit","navigate","fetchProfile","response","fetch","headers","localStorage","getItem","ok","data","json","fetchWeatherData","searched_locations","errorData","msg","console","cities","length","apiKey","promises","map","city","then","res","weatherResponses","Promise","all","toggleUnit","prevUnit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","email","home_city","type","checked","onChange","index","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CurrentWeather from './CurrentWeather'; // Import your CurrentWeather component\nimport './Profile.css'; // Make sure to create this CSS file for styling\n\nconst Profile = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [weatherData, setWeatherData] = useState([]);\n  const [unit, setUnit] = useState('metric'); // Default to metric (Celsius)\n  const navigate = useNavigate(); \n\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/users/profile', {\n          headers: {\n            'x-auth-token': localStorage.getItem('token')\n          }\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setUser(data.user);\n          fetchWeatherData(data.user.searched_locations); // Fetch weather data for searched locations\n        } else {\n          const errorData = await response.json();\n          setError(errorData.msg);\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Profile fetch error:', error);\n        setError('An error occurred while fetching the profile.');\n        navigate('/login');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const fetchWeatherData = async (cities) => {\n      if (cities.length > 0) {\n        const apiKey = 'e4ba4b05eee9251d041f4745a2222fce';\n        const promises = cities.map((city) => \n          fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit}&appid=${apiKey}`)\n            .then((res) => res.json())\n        );\n        const weatherResponses = await Promise.all(promises);\n        setWeatherData(weatherResponses);\n      }\n    };\n\n    fetchProfile();\n  }, [navigate, unit]); // Fetch data again when the unit changes\n\n  const toggleUnit = () => {\n    setUnit((prevUnit) => (prevUnit === 'metric' ? 'standard' : 'metric')); // Toggle between metric and standard\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading profile...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error-message\">{error}</div>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <h2>User Profile</h2>\n      {user ? (\n        <div className=\"profile-details\">\n          <p><strong>Username:</strong> {user.username}</p>\n          <p><strong>Email:</strong> {user.email}</p>\n          <p><strong>Home City:</strong> {user.home_city || 'Not set'}</p>\n  \n          <div className=\"unit-toggle\">\n            <label>\n              <input type=\"checkbox\" checked={unit === 'metric'} onChange={toggleUnit} />\n              {unit === 'metric' ? 'Switch to Kelvin' : 'Switch to Celsius'}\n            </label>\n          </div>\n\n          <div className=\"weather-section\">\n            <h3>Current Weather in Searched Locations</h3>\n            {weatherData.length > 0 ? (\n              weatherData.map((data, index) => (\n                <CurrentWeather key={index} data={data} unit={unit} />\n              ))\n            ) : (\n              <p>No weather data available.</p>\n            )}\n          </div>\n        </div>\n      ) : (\n        <p>Loading user data...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}