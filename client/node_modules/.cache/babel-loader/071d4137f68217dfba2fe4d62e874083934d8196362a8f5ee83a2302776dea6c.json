{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/src/components/HourlyForecast.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HourlyForecast = ({\n  data\n}) => {\n  const hourlyData = data.list.slice(0, 8).map(item => ({\n    time: new Date(item.dt * 1000).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    }),\n    temperature: Math.round(item.main.temp)\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow rounded-lg p-4 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-2\",\n      children: \"24-Hour Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: hourlyData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"temperature\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n};\n_c = HourlyForecast;\nvar _c;\n$RefreshReg$(_c, \"HourlyForecast\");","map":{"version":3,"names":["HourlyForecast","data","hourlyData","list","slice","map","item","time","Date","dt","toLocaleTimeString","hour","minute","temperature","Math","round","main","temp","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/src/components/HourlyForecast.jsx"],"sourcesContent":["const HourlyForecast = ({ data }) => {\n    const hourlyData = data.list.slice(0, 8).map(item => ({\n      time: new Date(item.dt * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n      temperature: Math.round(item.main.temp)\n    }));\n  \n    return (\n      <div className=\"bg-white shadow rounded-lg p-4 mb-4\">\n        <h2 className=\"text-2xl font-semibold mb-2\">24-Hour Forecast</h2>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart data={hourlyData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"time\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"temperature\" stroke=\"#8884d8\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    );\n};"],"mappings":";;AAAA,MAAMA,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACjC,MAAMC,UAAU,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAACC,IAAI,KAAK;IACpDC,IAAI,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,EAAE,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAC;IAC7FC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACT,IAAI,CAACU,IAAI,CAACC,IAAI;EACxC,CAAC,CAAC,CAAC;EAEH,oBACEC,OAAA;IAAKC,SAAS,EAAC,qCAAqC;IAAAC,QAAA,gBAClDF,OAAA;MAAIC,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjEN,OAAA,CAACO,mBAAmB;MAACC,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAP,QAAA,eAC5CF,OAAA,CAACU,SAAS;QAAC3B,IAAI,EAAEC,UAAW;QAAAkB,QAAA,gBAC1BF,OAAA,CAACW,aAAa;UAACC,eAAe,EAAC;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCN,OAAA,CAACa,KAAK;UAACC,OAAO,EAAC;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxBN,OAAA,CAACe,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTN,OAAA,CAACgB,OAAO;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXN,OAAA,CAACiB,MAAM;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACVN,OAAA,CAACkB,IAAI;UAACC,IAAI,EAAC,UAAU;UAACL,OAAO,EAAC,aAAa;UAACM,MAAM,EAAC;QAAS;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEZ,CAAC;AAACe,EAAA,GArBIvC,cAAc;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}