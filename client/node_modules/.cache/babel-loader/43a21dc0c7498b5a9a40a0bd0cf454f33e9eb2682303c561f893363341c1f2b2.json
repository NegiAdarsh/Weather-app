{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/WeatherAlert.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './WeatherAlerts.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherAlerts = () => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [weatherAlerts, setWeatherAlerts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.log('No token found, redirecting to login.');\n      navigate('/login');\n      return;\n    }\n    const parseJwt = token => {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      return JSON.parse(window.atob(base64));\n    };\n    try {\n      const decoded = parseJwt(token);\n      const userId = decoded.id; // Get user ID from the token\n\n      const fetchUserDetails = async () => {\n        try {\n          const response = await fetch(`http://localhost:3001/api/users/${userId}`, {\n            method: 'GET',\n            headers: {\n              'x-auth-token': token // Use the correct header for your auth\n            }\n          });\n          if (!response.ok) {\n            throw new Error('Failed to fetch user details');\n          }\n          const userDetails = await response.json();\n          setUsername(userDetails.username); // Assuming the user object contains a 'username'\n          setWeatherAlerts(userDetails.weather_alerts || []); // Assuming weather alerts are in the user object\n        } catch (error) {\n          console.error('Error fetching user details:', error);\n          navigate('/login'); // Redirect to login on error\n        } finally {\n          setLoading(false); // Set loading to false after the fetch\n        }\n      };\n      fetchUserDetails();\n    } catch (error) {\n      console.error('Failed to decode token:', error);\n      navigate('/login');\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-alerts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), username ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading user information...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your Weather Alerts:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather alerts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this) : weatherAlerts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alerts-list\",\n      children: weatherAlerts.map((alert, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Location: \", alert.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Threshold:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 32\n          }, this), \" \", alert.threshold_value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 32\n          }, this), \" \", alert.alert_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), alert.remark && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Remark:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 49\n          }, this), \" \", alert.remark]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 46\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No weather updates found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherAlerts, \"bjvtIlN6orJRb2YfCEA77YUpoy4=\", false, function () {\n  return [useNavigate];\n});\n_c = WeatherAlerts;\nexport default WeatherAlerts;\nvar _c;\n$RefreshReg$(_c, \"WeatherAlerts\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","WeatherAlerts","_s","navigate","username","setUsername","weatherAlerts","setWeatherAlerts","loading","setLoading","token","localStorage","getItem","console","log","parseJwt","base64Url","split","base64","replace","JSON","parse","window","atob","decoded","userId","id","fetchUserDetails","response","fetch","method","headers","ok","Error","userDetails","json","weather_alerts","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","alert","index","location","threshold_value","alert_type","remark","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/WeatherAlert.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './WeatherAlerts.css'; // Import your CSS file for styling\n\nconst WeatherAlerts = () => {\n    const navigate = useNavigate();\n    const [username, setUsername] = useState('');\n    const [weatherAlerts, setWeatherAlerts] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n\n        if (!token) {\n            console.log('No token found, redirecting to login.');\n            navigate('/login');\n            return;\n        }\n\n        const parseJwt = (token) => {\n            const base64Url = token.split('.')[1];\n            const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n            return JSON.parse(window.atob(base64));\n        };\n\n        try {\n            const decoded = parseJwt(token);\n            const userId = decoded.id; // Get user ID from the token\n\n            const fetchUserDetails = async () => {\n                try {\n                    const response = await fetch(`http://localhost:3001/api/users/${userId}`, {\n                        method: 'GET',\n                        headers: {\n                            'x-auth-token': token // Use the correct header for your auth\n                        }\n                    });\n\n                    if (!response.ok) {\n                        throw new Error('Failed to fetch user details');\n                    }\n\n                    const userDetails = await response.json();\n                    setUsername(userDetails.username); // Assuming the user object contains a 'username'\n                    setWeatherAlerts(userDetails.weather_alerts || []); // Assuming weather alerts are in the user object\n                } catch (error) {\n                    console.error('Error fetching user details:', error);\n                    navigate('/login'); // Redirect to login on error\n                } finally {\n                    setLoading(false); // Set loading to false after the fetch\n                }\n            };\n\n            fetchUserDetails();\n        } catch (error) {\n            console.error('Failed to decode token:', error);\n            navigate('/login');\n        }\n    }, [navigate]);\n\n    return (\n        <div className=\"weather-alerts-container\">\n            <h2>User Details</h2>\n            {username ? (\n                <h3>Welcome, {username}!</h3>\n            ) : (\n                <h3>Loading user information...</h3>\n            )}\n\n            <h4>Your Weather Alerts:</h4>\n            {loading ? (\n                <p>Loading weather alerts...</p>\n            ) : weatherAlerts.length > 0 ? (\n                <div className=\"alerts-list\">\n                    {weatherAlerts.map((alert, index) => (\n                        <div className=\"alert-card\" key={index}>\n                            <h5>Location: {alert.location}</h5>\n                            <p><strong>Threshold:</strong> {alert.threshold_value}</p>\n                            <p><strong>Type:</strong> {alert.alert_type}</p>\n                            {alert.remark && <p><strong>Remark:</strong> {alert.remark}</p>}\n                        </div>\n                    ))}\n                </div>\n            ) : (\n                <p>No weather updates found.</p>\n            )}\n        </div>\n    );\n};\n\nexport default WeatherAlerts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}