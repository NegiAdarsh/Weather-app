{"ast":null,"code":"var _jsxFileName = \"/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/BackgroundVideo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport clearSkyDay from '../videos/weather/clear_sky_day.mp4';\nimport clearSkyNight from '../videos/weather/clear_sky_night.mp4';\nimport cloudyDay from '../videos/weather/cloudy_sky_day.mp4';\nimport cloudyNight from '../videos/weather/cloudy_sky_night.mp4';\nimport rain from '../videos/weather/rain.mp4';\nimport snow from '../videos/weather/snow.mp4';\nimport haze from '../videos/weather/haze.mp4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundVideo = ({\n  weatherCondition,\n  icon\n}) => {\n  _s();\n  const [videoSrc, setVideoSrc] = useState('');\n  useEffect(() => {\n    const getVideoSource = () => {\n      const timeOfDay = icon.endsWith('d') ? 'day' : 'night';\n      const condition = weatherCondition.toLowerCase();\n      if (condition.includes('rain')) {\n        return rain;\n      } else if (condition.includes('snow')) {\n        return snow;\n      } else if (condition.includes('clouds') || condition.includes('overcast')) {\n        return timeOfDay === 'day' ? cloudyDay : cloudyNight;\n      } else if (condition.includes('haze') || condition.includes('mist')) {\n        return haze;\n      } else {\n        return timeOfDay === 'day' ? clearSkyDay : clearSkyNight;\n      }\n    };\n    setVideoSrc(getVideoSource());\n  }, [weatherCondition, icon]);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    // Add this to force re-render when source changes\n    autoPlay: true,\n    loop: true,\n    muted: true,\n    className: \"background-video\",\n    children: [/*#__PURE__*/_jsxDEV(\"source\", {\n      src: videoSrc,\n      type: \"video/mp4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \"Your browser does not support the video tag.\"]\n  }, videoSrc, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(BackgroundVideo, \"k3+H1XTINrWxQxNXfrSZx+9vI/s=\");\n_c = BackgroundVideo;\nexport default BackgroundVideo;\nvar _c;\n$RefreshReg$(_c, \"BackgroundVideo\");","map":{"version":3,"names":["React","useEffect","useState","clearSkyDay","clearSkyNight","cloudyDay","cloudyNight","rain","snow","haze","jsxDEV","_jsxDEV","BackgroundVideo","weatherCondition","icon","_s","videoSrc","setVideoSrc","getVideoSource","timeOfDay","endsWith","condition","toLowerCase","includes","autoPlay","loop","muted","className","children","src","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adarsh/Desktop/Main-Project/weather-app/client/src/components/BackgroundVideo.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport clearSkyDay from '../videos/weather/clear_sky_day.mp4';\nimport clearSkyNight from '../videos/weather/clear_sky_night.mp4';\nimport cloudyDay from '../videos/weather/cloudy_sky_day.mp4';\nimport cloudyNight from '../videos/weather/cloudy_sky_night.mp4';\nimport rain from '../videos/weather/rain.mp4';\nimport snow from '../videos/weather/snow.mp4';\nimport haze from '../videos/weather/haze.mp4'\n\nconst BackgroundVideo = ({ weatherCondition, icon }) => {\n  const [videoSrc, setVideoSrc] = useState('');\n\n  useEffect(() => {\n    const getVideoSource = () => {\n      const timeOfDay = icon.endsWith('d') ? 'day' : 'night';\n      const condition = weatherCondition.toLowerCase();\n\n      if (condition.includes('rain')) {\n        return rain;\n      } else if (condition.includes('snow')) {\n        return snow;\n      } else if (condition.includes('clouds') || condition.includes('overcast')) {\n        return timeOfDay === 'day' ? cloudyDay : cloudyNight;\n      } \n      else if(condition.includes('haze') || condition.includes('mist'))\n        {\n          return haze;\n        }\n      else {\n        return timeOfDay === 'day' ? clearSkyDay : clearSkyNight;\n      }\n    };\n\n    setVideoSrc(getVideoSource());\n  }, [weatherCondition, icon]);\n\n  return (\n    <video\n      key={videoSrc} // Add this to force re-render when source changes\n      autoPlay\n      loop\n      muted\n      className=\"background-video\"\n    >\n      <source src={videoSrc} type=\"video/mp4\" />\n      Your browser does not support the video tag.\n    </video>\n  );\n};\n\nexport default BackgroundVideo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,qCAAqC;AAC7D,OAAOC,aAAa,MAAM,uCAAuC;AACjE,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,WAAW,MAAM,wCAAwC;AAChE,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,IAAI,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,eAAe,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,SAAS,GAAGL,IAAI,CAACM,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,OAAO;MACtD,MAAMC,SAAS,GAAGR,gBAAgB,CAACS,WAAW,CAAC,CAAC;MAEhD,IAAID,SAAS,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC9B,OAAOhB,IAAI;MACb,CAAC,MAAM,IAAIc,SAAS,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;QACrC,OAAOf,IAAI;MACb,CAAC,MAAM,IAAIa,SAAS,CAACE,QAAQ,CAAC,QAAQ,CAAC,IAAIF,SAAS,CAACE,QAAQ,CAAC,UAAU,CAAC,EAAE;QACzE,OAAOJ,SAAS,KAAK,KAAK,GAAGd,SAAS,GAAGC,WAAW;MACtD,CAAC,MACI,IAAGe,SAAS,CAACE,QAAQ,CAAC,MAAM,CAAC,IAAIF,SAAS,CAACE,QAAQ,CAAC,MAAM,CAAC,EAC9D;QACE,OAAOd,IAAI;MACb,CAAC,MACE;QACH,OAAOU,SAAS,KAAK,KAAK,GAAGhB,WAAW,GAAGC,aAAa;MAC1D;IACF,CAAC;IAEDa,WAAW,CAACC,cAAc,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,CAACL,gBAAgB,EAAEC,IAAI,CAAC,CAAC;EAE5B,oBACEH,OAAA;IACiB;IACfa,QAAQ;IACRC,IAAI;IACJC,KAAK;IACLC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAE5BjB,OAAA;MAAQkB,GAAG,EAAEb,QAAS;MAACc,IAAI,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gDAE5C;EAAA,GAROlB,QAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAQR,CAAC;AAEZ,CAAC;AAACnB,EAAA,CAvCIH,eAAe;AAAAuB,EAAA,GAAfvB,eAAe;AAyCrB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}